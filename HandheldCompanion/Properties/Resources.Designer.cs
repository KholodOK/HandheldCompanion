//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HandheldCompanion.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HandheldCompanion.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        public static string AboutPage_About {
            get {
                return ResourceManager.GetString("AboutPage_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A combination of a Windows service and a touch interface optimized GUI to increase your handheld gaming computer experience. Features include: motion control a.k.a. gyro control, virtual controller simulation, quick tools overlay, virtual touchpads, 3D controller model, per application based profile settings system. Handheld Companion relies on ViGEmBus driver and ViGEmClient libraries as well as HidHide kernel-mode filter driver. Motion control algorithms are based on work by Jibbsmart and availible inform [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string AboutPage_AboutDescription {
            get {
                return ResourceManager.GetString("AboutPage_AboutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Accelerometer.
        /// </summary>
        public static string AboutPage_Accelerometer {
            get {
                return ResourceManager.GetString("AboutPage_Accelerometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Author.
        /// </summary>
        public static string AboutPage_Author {
            get {
                return ResourceManager.GetString("AboutPage_Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Contributors.
        /// </summary>
        public static string AboutPage_Contributors {
            get {
                return ResourceManager.GetString("AboutPage_Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        public static string AboutPage_Description {
            get {
                return ResourceManager.GetString("AboutPage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Donate.
        /// </summary>
        public static string AboutPage_Donate {
            get {
                return ResourceManager.GetString("AboutPage_Donate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gyrometer.
        /// </summary>
        public static string AboutPage_Gyrometer {
            get {
                return ResourceManager.GetString("AboutPage_Gyrometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Inclinometer.
        /// </summary>
        public static string AboutPage_Inclinometer {
            get {
                return ResourceManager.GetString("AboutPage_Inclinometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manufacturer.
        /// </summary>
        public static string AboutPage_Manufacturer {
            get {
                return ResourceManager.GetString("AboutPage_Manufacturer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à N/A.
        /// </summary>
        public static string AboutPage_NotApplicable {
            get {
                return ResourceManager.GetString("AboutPage_NotApplicable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Partner.
        /// </summary>
        public static string AboutPage_Partner {
            get {
                return ResourceManager.GetString("AboutPage_Partner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Product name.
        /// </summary>
        public static string AboutPage_ProductName {
            get {
                return ResourceManager.GetString("AboutPage_ProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Related Links.
        /// </summary>
        public static string AboutPage_RelatedLinks {
            get {
                return ResourceManager.GetString("AboutPage_RelatedLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External.
        /// </summary>
        public static string AboutPage_SensorExternal {
            get {
                return ResourceManager.GetString("AboutPage_SensorExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Internal.
        /// </summary>
        public static string AboutPage_SensorInternal {
            get {
                return ResourceManager.GetString("AboutPage_SensorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor name.
        /// </summary>
        public static string AboutPage_SensorName {
            get {
                return ResourceManager.GetString("AboutPage_SensorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor specification.
        /// </summary>
        public static string AboutPage_SensorSpecification {
            get {
                return ResourceManager.GetString("AboutPage_SensorSpecification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service.
        /// </summary>
        public static string AboutPage_Service {
            get {
                return ResourceManager.GetString("AboutPage_Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source code.
        /// </summary>
        public static string AboutPage_SourceCode {
            get {
                return ResourceManager.GetString("AboutPage_SourceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oups, it appears your device is not supported yet. The software might not run as expected..
        /// </summary>
        public static string AboutPage_UnsupportedDevice {
            get {
                return ResourceManager.GetString("AboutPage_UnsupportedDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        public static string AboutPage_Version {
            get {
                return ResourceManager.GetString("AboutPage_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wiki.
        /// </summary>
        public static string AboutPage_Wiki {
            get {
                return ResourceManager.GetString("AboutPage_Wiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Administrator.
        /// </summary>
        public static string Administrator {
            get {
                return ResourceManager.GetString("Administrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A,B,X,Y.
        /// </summary>
        public static string ButtonsPage_ABXY {
            get {
                return ResourceManager.GetString("ButtonsPage_ABXY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BACK GRIPS.
        /// </summary>
        public static string ButtonsPage_Back_Grips {
            get {
                return ResourceManager.GetString("ButtonsPage_Back_Grips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BUMPERS.
        /// </summary>
        public static string ButtonsPage_Bumpers {
            get {
                return ResourceManager.GetString("ButtonsPage_Bumpers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MENU.
        /// </summary>
        public static string ButtonsPage_Menu {
            get {
                return ResourceManager.GetString("ButtonsPage_Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OEM.
        /// </summary>
        public static string ButtonsPage_OEM {
            get {
                return ResourceManager.GetString("ButtonsPage_OEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] chord_neptune {
            get {
                object obj = ResourceManager.GetObject("chord_neptune", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connect.
        /// </summary>
        public static string Controller_Connect {
            get {
                return ResourceManager.GetString("Controller_Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnect.
        /// </summary>
        public static string Controller_Disconnect {
            get {
                return ResourceManager.GetString("Controller_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hide.
        /// </summary>
        public static string Controller_Hide {
            get {
                return ResourceManager.GetString("Controller_Hide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unhide.
        /// </summary>
        public static string Controller_Unhide {
            get {
                return ResourceManager.GetString("Controller_Unhide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Virtual .
        /// </summary>
        public static string Controller_Virtual {
            get {
                return ResourceManager.GetString("Controller_Virtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hide controller on connect.
        /// </summary>
        public static string ControllerPage_CloakDevice {
            get {
                return ResourceManager.GetString("ControllerPage_CloakDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hide physical controller when connected.
        /// </summary>
        public static string ControllerPage_CloakDeviceDesc {
            get {
                return ResourceManager.GetString("ControllerPage_CloakDeviceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close.
        /// </summary>
        public static string ControllerPage_Close {
            get {
                return ResourceManager.GetString("ControllerPage_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connect.
        /// </summary>
        public static string ControllerPage_Connect {
            get {
                return ResourceManager.GetString("ControllerPage_Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller.
        /// </summary>
        public static string ControllerPage_Controller {
            get {
                return ResourceManager.GetString("ControllerPage_Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller management.
        /// </summary>
        public static string ControllerPage_ControllerManagement {
            get {
                return ResourceManager.GetString("ControllerPage_ControllerManagement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatically manage your controllers for greater compatibility.
        /// </summary>
        public static string ControllerPage_ControllerManagementDesc {
            get {
                return ResourceManager.GetString("ControllerPage_ControllerManagementDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Desktop layout.
        /// </summary>
        public static string ControllerPage_DesktopLayout {
            get {
                return ResourceManager.GetString("ControllerPage_DesktopLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Define desktop layout.
        /// </summary>
        public static string ControllerPage_DesktopLayoutDefine {
            get {
                return ResourceManager.GetString("ControllerPage_DesktopLayoutDefine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Define controller layout when in desktop mode.
        /// </summary>
        public static string ControllerPage_DesktopLayoutDefineController {
            get {
                return ResourceManager.GetString("ControllerPage_DesktopLayoutDefineController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Edit.
        /// </summary>
        public static string ControllerPage_DesktopLayoutEdit {
            get {
                return ResourceManager.GetString("ControllerPage_DesktopLayoutEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable desktop layout.
        /// </summary>
        public static string ControllerPage_DesktopLayoutEnable {
            get {
                return ResourceManager.GetString("ControllerPage_DesktopLayoutEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller cloaking.
        /// </summary>
        public static string ControllerPage_DeviceCloaking {
            get {
                return ResourceManager.GetString("ControllerPage_DeviceCloaking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnect.
        /// </summary>
        public static string ControllerPage_Disconnect {
            get {
                return ResourceManager.GetString("ControllerPage_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Go to profiles settings to change per-game emulated controller type preference..
        /// </summary>
        public static string ControllerPage_HIDManagedByProfileAction {
            get {
                return ResourceManager.GetString("ControllerPage_HIDManagedByProfileAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The emulated controller type is being managed by the currently applied game profile..
        /// </summary>
        public static string ControllerPage_HIDManagedByProfileDesc {
            get {
                return ResourceManager.GetString("ControllerPage_HIDManagedByProfileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated controller is managed by profile.
        /// </summary>
        public static string ControllerPage_HIDManagedByProfileWarning {
            get {
                return ResourceManager.GetString("ControllerPage_HIDManagedByProfileWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Touchpad passthrough.
        /// </summary>
        public static string ControllerPage_LegionGoPassthrough {
            get {
                return ResourceManager.GetString("ControllerPage_LegionGoPassthrough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allows you to use your device’s touchpad as a regular mouse, without any software processing or mapping.
        /// </summary>
        public static string ControllerPage_LegionGoPassthroughDesc {
            get {
                return ResourceManager.GetString("ControllerPage_LegionGoPassthroughDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Non-game controller layouts.
        /// </summary>
        public static string ControllerPage_NonGameControllerLayouts {
            get {
                return ResourceManager.GetString("ControllerPage_NonGameControllerLayouts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You might want to click on Connect next to your plugged controller..
        /// </summary>
        public static string ControllerPage_NoPhysicalControllerAction {
            get {
                return ResourceManager.GetString("ControllerPage_NoPhysicalControllerAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You have no physical controller connected. No inputs will be sent to HC or its service..
        /// </summary>
        public static string ControllerPage_NoPhysicalControllerDesc {
            get {
                return ResourceManager.GetString("ControllerPage_NoPhysicalControllerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please make sure you connected a compatible XInput or DInput device..
        /// </summary>
        public static string ControllerPage_NoPhysicalControllerDetectedAction {
            get {
                return ResourceManager.GetString("ControllerPage_NoPhysicalControllerDetectedAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No physical controller detected.
        /// </summary>
        public static string ControllerPage_NoPhysicalControllerDetectedWarning {
            get {
                return ResourceManager.GetString("ControllerPage_NoPhysicalControllerDetectedWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No physical controller connected.
        /// </summary>
        public static string ControllerPage_NoPhysicalControllerWarning {
            get {
                return ResourceManager.GetString("ControllerPage_NoPhysicalControllerWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You might want to start companion service or make sure your virtual controller status is set to: Connected.
        /// </summary>
        public static string ControllerPage_NoVirtualControllerAction {
            get {
                return ResourceManager.GetString("ControllerPage_NoVirtualControllerAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your physical controller is hidden, yet you have no virtual controller available. No inputs will be sent to games..
        /// </summary>
        public static string ControllerPage_NoVirtualControllerDesc {
            get {
                return ResourceManager.GetString("ControllerPage_NoVirtualControllerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No virtual controller detected.
        /// </summary>
        public static string ControllerPage_NoVirtualControllerWarning {
            get {
                return ResourceManager.GetString("ControllerPage_NoVirtualControllerWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You might want to unmute your virtual controller or unhide your physical controller..
        /// </summary>
        public static string ControllerPage_PhysicalControllerHiddenAction {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalControllerHiddenAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your physical controller is hidden, yet you have muted your virtual controller..
        /// </summary>
        public static string ControllerPage_PhysicalControllerHiddenDesc {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalControllerHiddenDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Physical controller is hidden.
        /// </summary>
        public static string ControllerPage_PhysicalControllerHiddenWarning {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalControllerHiddenWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You might want to hide your physical controller or mute your virtual controller..
        /// </summary>
        public static string ControllerPage_PhysicalControllerNotHiddenAction {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalControllerNotHiddenAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your physical controller is not hidden, yet you have an unmuted virtual controller. You might encounter double inputs in games..
        /// </summary>
        public static string ControllerPage_PhysicalControllerNotHiddenDesc {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalControllerNotHiddenDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Physical controller is not hidden.
        /// </summary>
        public static string ControllerPage_PhysicalControllerNotHiddenWarning {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalControllerNotHiddenWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Physical controllers.
        /// </summary>
        public static string ControllerPage_PhysicalDevices {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à connected to the computer.
        /// </summary>
        public static string ControllerPage_PhysicalDevicesDesc {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalDevicesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Physical controllers settings.
        /// </summary>
        public static string ControllerPage_PhysicalDeviceSettings {
            get {
                return ResourceManager.GetString("ControllerPage_PhysicalDeviceSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HD rumble.
        /// </summary>
        public static string ControllerPage_SteamControllerHDRumble {
            get {
                return ResourceManager.GetString("ControllerPage_SteamControllerHDRumble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use high-definition rumble engine, at the cost of higher CPU usage.
        /// </summary>
        public static string ControllerPage_SteamControllerHDRumbleDesc {
            get {
                return ResourceManager.GetString("ControllerPage_SteamControllerHDRumbleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mute virtual controller.
        /// </summary>
        public static string ControllerPage_SteamControllerMute {
            get {
                return ResourceManager.GetString("ControllerPage_SteamControllerMute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mute virtual controller on steam related applications.
        /// </summary>
        public static string ControllerPage_SteamControllerMuteDesc {
            get {
                return ResourceManager.GetString("ControllerPage_SteamControllerMuteDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Try again.
        /// </summary>
        public static string ControllerPage_TryAgain {
            get {
                return ResourceManager.GetString("ControllerPage_TryAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unhide controller on close.
        /// </summary>
        public static string ControllerPage_UncloakOnClose {
            get {
                return ResourceManager.GetString("ControllerPage_UncloakOnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restore visibility of all physical controllers when application is exited.
        /// </summary>
        public static string ControllerPage_UncloakOnCloseDesc {
            get {
                return ResourceManager.GetString("ControllerPage_UncloakOnCloseDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vibrate controller on connect.
        /// </summary>
        public static string ControllerPage_VibrateDevice {
            get {
                return ResourceManager.GetString("ControllerPage_VibrateDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vibrate physical controller when connected.
        /// </summary>
        public static string ControllerPage_VibrateDeviceDesc {
            get {
                return ResourceManager.GetString("ControllerPage_VibrateDeviceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vibration strength.
        /// </summary>
        public static string ControllerPage_VibrationStrength {
            get {
                return ResourceManager.GetString("ControllerPage_VibrationStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change controller vibration strength.
        /// </summary>
        public static string ControllerPage_VibrationStrengthExpl {
            get {
                return ResourceManager.GetString("ControllerPage_VibrationStrengthExpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Virtual controller.
        /// </summary>
        public static string ControllerPage_VirtualDevices {
            get {
                return ResourceManager.GetString("ControllerPage_VirtualDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à is what the computer uses.
        /// </summary>
        public static string ControllerPage_VirtualDevicesDesc {
            get {
                return ResourceManager.GetString("ControllerPage_VirtualDevicesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Virtual controller settings.
        /// </summary>
        public static string ControllerPage_VirtualDeviceSettings {
            get {
                return ResourceManager.GetString("ControllerPage_VirtualDeviceSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller status.
        /// </summary>
        public static string ControllerPage_VirtualStatus {
            get {
                return ResourceManager.GetString("ControllerPage_VirtualStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change virtual controller status.
        /// </summary>
        public static string ControllerPage_VirtualStatusDesc {
            get {
                return ResourceManager.GetString("ControllerPage_VirtualStatusDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller type.
        /// </summary>
        public static string ControllerPage_VirtualType {
            get {
                return ResourceManager.GetString("ControllerPage_VirtualType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change virtual controller type.
        /// </summary>
        public static string ControllerPage_VirtualTypeDesc {
            get {
                return ResourceManager.GetString("ControllerPage_VirtualTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ambilight Vertical Blackbar detection.
        /// </summary>
        public static string DevicePage_AmbilightVerticalBlackBarDetection {
            get {
                return ResourceManager.GetString("DevicePage_AmbilightVerticalBlackBarDetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vertical black bar detection for 4:3 aspect ratio games or videos.
        /// </summary>
        public static string DevicePage_AmbilightVerticalBlackBarDetectionDesc {
            get {
                return ResourceManager.GetString("DevicePage_AmbilightVerticalBlackBarDetectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device.
        /// </summary>
        public static string DevicePage_Device {
            get {
                return ResourceManager.GetString("DevicePage_Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Effects.
        /// </summary>
        public static string DevicePage_DynamicLighting {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ambilight.
        /// </summary>
        public static string DevicePage_DynamicLighting_Ambilight {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_Ambilight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Breathing.
        /// </summary>
        public static string DevicePage_DynamicLighting_Breathing {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_Breathing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Brightness.
        /// </summary>
        public static string DevicePage_DynamicLighting_Brightness {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_Brightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the brightness of your lights.
        /// </summary>
        public static string DevicePage_DynamicLighting_BrightnessDesc {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_BrightnessDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Direction.
        /// </summary>
        public static string DevicePage_DynamicLighting_EffectDirection {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_EffectDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Effect speed.
        /// </summary>
        public static string DevicePage_DynamicLighting_EffectSpeed {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_EffectSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gradient.
        /// </summary>
        public static string DevicePage_DynamicLighting_Gradient {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_Gradient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Main color.
        /// </summary>
        public static string DevicePage_DynamicLighting_MainColorSelection {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_MainColorSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Match my Windows accent color.
        /// </summary>
        public static string DevicePage_DynamicLighting_MatchAccentColor {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_MatchAccentColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        public static string DevicePage_DynamicLighting_None {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rainbow.
        /// </summary>
        public static string DevicePage_DynamicLighting_Rainbow {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_Rainbow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Second color.
        /// </summary>
        public static string DevicePage_DynamicLighting_SecondColorSelection {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_SecondColorSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Solid Color.
        /// </summary>
        public static string DevicePage_DynamicLighting_SolidColor {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_SolidColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wave.
        /// </summary>
        public static string DevicePage_DynamicLighting_Wave {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_Wave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wheel.
        /// </summary>
        public static string DevicePage_DynamicLighting_Wheel {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLighting_Wheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose color themes and effects for your lighting.
        /// </summary>
        public static string DevicePage_DynamicLightingDesc {
            get {
                return ResourceManager.GetString("DevicePage_DynamicLightingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sets the fan to max speed.
        /// </summary>
        public static string DevicePage_FullFanSpeedDesc {
            get {
                return ResourceManager.GetString("DevicePage_FullFanSpeedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fan max speed override.
        /// </summary>
        public static string DevicePage_FullFanSpeedText {
            get {
                return ResourceManager.GetString("DevicePage_FullFanSpeedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auto Sleep Time.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerAutoSleepTime {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerAutoSleepTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick Deadzone.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerJoystickDeadzone {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerJoystickDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Legion Controller.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerLeft {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change settings for the left legion controller.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerLeftDesc {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Legion Controller.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerRight {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change settings for the right legion controller.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerRightDesc {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerRightDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trigger Deadzone.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerTriggerDeadzone {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerTriggerDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trigger Margin.
        /// </summary>
        public static string DevicePage_Lenovo_ControllerTriggerMargin {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_ControllerTriggerMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lenovo Legion Go settings.
        /// </summary>
        public static string DevicePage_Lenovo_Settings {
            get {
                return ResourceManager.GetString("DevicePage_Lenovo_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power options.
        /// </summary>
        public static string DevicePage_PowerOptions {
            get {
                return ResourceManager.GetString("DevicePage_PowerOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use second color.
        /// </summary>
        public static string DevicePage_UseSecondColor {
            get {
                return ResourceManager.GetString("DevicePage_UseSecondColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your device must be restarted in order for the changes to take effect. Would you like to restart now?.
        /// </summary>
        public static string Dialog_ForceRestartDesc {
            get {
                return ResourceManager.GetString("Dialog_ForceRestartDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart required.
        /// </summary>
        public static string Dialog_ForceRestartTitle {
            get {
                return ResourceManager.GetString("Dialog_ForceRestartTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No.
        /// </summary>
        public static string Dialog_No {
            get {
                return ResourceManager.GetString("Dialog_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes.
        /// </summary>
        public static string Dialog_Yes {
            get {
                return ResourceManager.GetString("Dialog_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DIRECTIONAL PAD.
        /// </summary>
        public static string DPadPage_DPad {
            get {
                return ResourceManager.GetString("DPadPage_DPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] empty_neptune {
            get {
                object obj = ResourceManager.GetObject("empty_neptune", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AYA.
        /// </summary>
        public static string Enum_AYANEO2_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.AYANEO2.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ≈.
        /// </summary>
        public static string Enum_AYANEO2_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.AYANEO2.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RC.
        /// </summary>
        public static string Enum_AYANEO2_ButtonFlags_OEM3 {
            get {
                return ResourceManager.GetString("Enum.AYANEO2.ButtonFlags.OEM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LC.
        /// </summary>
        public static string Enum_AYANEO2_ButtonFlags_OEM4 {
            get {
                return ResourceManager.GetString("Enum.AYANEO2.ButtonFlags.OEM4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Win.
        /// </summary>
        public static string Enum_AYANEO2021Pro_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.AYANEO2021Pro.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Esc.
        /// </summary>
        public static string Enum_AYANEO2021Pro_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.AYANEO2021Pro.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à KB.
        /// </summary>
        public static string Enum_AYANEO2021Pro_ButtonFlags_OEM3 {
            get {
                return ResourceManager.GetString("Enum.AYANEO2021Pro.ButtonFlags.OEM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AYA.
        /// </summary>
        public static string Enum_AYANEOAIR_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIR.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ≈.
        /// </summary>
        public static string Enum_AYANEOAIR_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIR.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RC.
        /// </summary>
        public static string Enum_AYANEOAIR_ButtonFlags_OEM3 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIR.ButtonFlags.OEM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LC.
        /// </summary>
        public static string Enum_AYANEOAIR_ButtonFlags_OEM4 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIR.ButtonFlags.OEM4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AYA.
        /// </summary>
        public static string Enum_AYANEOAIRLite_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRLite.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ≈.
        /// </summary>
        public static string Enum_AYANEOAIRLite_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRLite.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RC.
        /// </summary>
        public static string Enum_AYANEOAIRLite_ButtonFlags_OEM3 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRLite.ButtonFlags.OEM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LC.
        /// </summary>
        public static string Enum_AYANEOAIRLite_ButtonFlags_OEM4 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRLite.ButtonFlags.OEM4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AYA.
        /// </summary>
        public static string Enum_AYANEOAIRPro_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRPro.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ≈.
        /// </summary>
        public static string Enum_AYANEOAIRPro_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRPro.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RC.
        /// </summary>
        public static string Enum_AYANEOAIRPro_ButtonFlags_OEM3 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRPro.ButtonFlags.OEM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LC.
        /// </summary>
        public static string Enum_AYANEOAIRPro_ButtonFlags_OEM4 {
            get {
                return ResourceManager.GetString("Enum.AYANEOAIRPro.ButtonFlags.OEM4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Single-touch swipe.
        /// </summary>
        public static string Enum_DS4Controller_AxisLayoutFlags_LeftPad {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.AxisLayoutFlags.LeftPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multi-touch swipe.
        /// </summary>
        public static string Enum_DS4Controller_AxisLayoutFlags_RightPad {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.AxisLayoutFlags.RightPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cross.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_B1 {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.B1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Circle.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_B2 {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.B2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Square.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_B3 {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.B3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Triangle.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_B4 {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.B4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Share.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_Back {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Single-touch click.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_LeftPadClick {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.LeftPadClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Single-touch tap.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_LeftPadTouch {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.LeftPadTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multi-touch click.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_RightPadClick {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.RightPadClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multi-touch tap.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_RightPadTouch {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.RightPadTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sony.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_Special {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.Special", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Options.
        /// </summary>
        public static string Enum_DS4Controller_ButtonFlags_Start {
            get {
                return ResourceManager.GetString("Enum.DS4Controller.ButtonFlags.Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Single-touch swipe.
        /// </summary>
        public static string Enum_DualSenseController_AxisLayoutFlags_LeftPad {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.AxisLayoutFlags.LeftPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multi-touch swipe.
        /// </summary>
        public static string Enum_DualSenseController_AxisLayoutFlags_RightPad {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.AxisLayoutFlags.RightPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cross.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_B1 {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.B1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Circle.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_B2 {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.B2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Square.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_B3 {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.B3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Triangle.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_B4 {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.B4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Share.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_Back {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Single-touch click.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_LeftPadClick {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.LeftPadClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Single-touch tap.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_LeftPadTouch {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.LeftPadTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multi-touch click.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_RightPadClick {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.RightPadClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multi-touch tap.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_RightPadTouch {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.RightPadTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sony.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_Special {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.Special", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Options.
        /// </summary>
        public static string Enum_DualSenseController_ButtonFlags_Start {
            get {
                return ResourceManager.GetString("Enum.DualSenseController.ButtonFlags.Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_A {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Always On.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_AlwaysOn {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.AlwaysOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_B {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Back.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_Back {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Down.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_DPadDown {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.DPadDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Left.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_DPadLeft {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.DPadLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Right.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_DPadRight {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.DPadRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Up.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_DPadUp {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.DPadUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Shoulder.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_LeftShoulder {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.LeftShoulder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Thumb.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_LeftThumb {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.LeftThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Trigger.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_LeftTrigger {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.LeftTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Shoulder.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_RightShoulder {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.RightShoulder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Thumb.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_RightThumb {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.RightThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Trigger.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_RightTrigger {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.RightTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_Start {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_X {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y.
        /// </summary>
        public static string Enum_GamepadButtonFlagsExt_Y {
            get {
                return ResourceManager.GetString("Enum.GamepadButtonFlagsExt.Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated DualShock 4 controller.
        /// </summary>
        public static string Enum_HIDmode_DualShock4Controller {
            get {
                return ResourceManager.GetString("Enum.HIDmode.DualShock4Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No emulated controller.
        /// </summary>
        public static string Enum_HIDmode_NoController {
            get {
                return ResourceManager.GetString("Enum.HIDmode.NoController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated XBOX 360 controller.
        /// </summary>
        public static string Enum_HIDmode_Xbox360Controller {
            get {
                return ResourceManager.GetString("Enum.HIDmode.Xbox360Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connected.
        /// </summary>
        public static string Enum_HIDstatus_Connected {
            get {
                return ResourceManager.GetString("Enum.HIDstatus.Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnected.
        /// </summary>
        public static string Enum_HIDstatus_Disconnected {
            get {
                return ResourceManager.GetString("Enum.HIDstatus.Disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auto Roll Yaw Swap.
        /// </summary>
        public static string Enum_Input_AutoRollYawSwap {
            get {
                return ResourceManager.GetString("Enum.Input.AutoRollYawSwap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick steering.
        /// </summary>
        public static string Enum_Input_JoystickSteering {
            get {
                return ResourceManager.GetString("Enum.Input.JoystickSteering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Local space.
        /// </summary>
        public static string Enum_Input_LocalSpace {
            get {
                return ResourceManager.GetString("Enum.Input.LocalSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Player space.
        /// </summary>
        public static string Enum_Input_PlayerSpace {
            get {
                return ResourceManager.GetString("Enum.Input.PlayerSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à World space.
        /// </summary>
        public static string Enum_Input_WorldSpace {
            get {
                return ResourceManager.GetString("Enum.Input.WorldSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom.
        /// </summary>
        public static string Enum_InputsHotkeyType_Custom {
            get {
                return ResourceManager.GetString("Enum.InputsHotkeyType.Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device.
        /// </summary>
        public static string Enum_InputsHotkeyType_Device {
            get {
                return ResourceManager.GetString("Enum.InputsHotkeyType.Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Handheld Companion.
        /// </summary>
        public static string Enum_InputsHotkeyType_Handheld {
            get {
                return ResourceManager.GetString("Enum.InputsHotkeyType.Handheld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Handheld Companion.
        /// </summary>
        public static string Enum_InputsHotkeyType_HC {
            get {
                return ResourceManager.GetString("Enum.InputsHotkeyType.HC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string Enum_InputsHotkeyType_Overlay {
            get {
                return ResourceManager.GetString("Enum.InputsHotkeyType.Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quick tools.
        /// </summary>
        public static string Enum_InputsHotkeyType_Quicktools {
            get {
                return ResourceManager.GetString("Enum.InputsHotkeyType.Quicktools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Windows.
        /// </summary>
        public static string Enum_InputsHotkeyType_Windows {
            get {
                return ResourceManager.GetString("Enum.InputsHotkeyType.Windows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A.
        /// </summary>
        public static string Enum_KeyFlags_A {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alt.
        /// </summary>
        public static string Enum_KeyFlags_Alt {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Apostrophe.
        /// </summary>
        public static string Enum_KeyFlags_Apostrophe {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Apostrophe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B.
        /// </summary>
        public static string Enum_KeyFlags_B {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backslash.
        /// </summary>
        public static string Enum_KeyFlags_Backslash {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Backslash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backspace.
        /// </summary>
        public static string Enum_KeyFlags_Backspace {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Backspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à C.
        /// </summary>
        public static string Enum_KeyFlags_C {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Comma.
        /// </summary>
        public static string Enum_KeyFlags_Comma {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Comma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Control.
        /// </summary>
        public static string Enum_KeyFlags_Control {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Control", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à D.
        /// </summary>
        public static string Enum_KeyFlags_D {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete.
        /// </summary>
        public static string Enum_KeyFlags_Delete {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à E.
        /// </summary>
        public static string Enum_KeyFlags_E {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.E", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à End.
        /// </summary>
        public static string Enum_KeyFlags_End {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter.
        /// </summary>
        public static string Enum_KeyFlags_Enter {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Enter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Equal.
        /// </summary>
        public static string Enum_KeyFlags_Equal {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Escape.
        /// </summary>
        public static string Enum_KeyFlags_Escape {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Escape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F.
        /// </summary>
        public static string Enum_KeyFlags_F {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F1.
        /// </summary>
        public static string Enum_KeyFlags_F1 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F10.
        /// </summary>
        public static string Enum_KeyFlags_F10 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F11.
        /// </summary>
        public static string Enum_KeyFlags_F11 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F12.
        /// </summary>
        public static string Enum_KeyFlags_F12 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F2.
        /// </summary>
        public static string Enum_KeyFlags_F2 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F3.
        /// </summary>
        public static string Enum_KeyFlags_F3 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F4.
        /// </summary>
        public static string Enum_KeyFlags_F4 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F5.
        /// </summary>
        public static string Enum_KeyFlags_F5 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F6.
        /// </summary>
        public static string Enum_KeyFlags_F6 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F7.
        /// </summary>
        public static string Enum_KeyFlags_F7 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F8.
        /// </summary>
        public static string Enum_KeyFlags_F8 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à F9.
        /// </summary>
        public static string Enum_KeyFlags_F9 {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.F9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à G.
        /// </summary>
        public static string Enum_KeyFlags_G {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.G", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Grave.
        /// </summary>
        public static string Enum_KeyFlags_Grave {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Grave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à H.
        /// </summary>
        public static string Enum_KeyFlags_H {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.H", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Home.
        /// </summary>
        public static string Enum_KeyFlags_Home {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I.
        /// </summary>
        public static string Enum_KeyFlags_I {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.I", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Insert.
        /// </summary>
        public static string Enum_KeyFlags_Insert {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à J.
        /// </summary>
        public static string Enum_KeyFlags_J {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à K.
        /// </summary>
        public static string Enum_KeyFlags_K {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.K", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à L.
        /// </summary>
        public static string Enum_KeyFlags_L {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.L", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à M.
        /// </summary>
        public static string Enum_KeyFlags_M {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.M", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Minus.
        /// </summary>
        public static string Enum_KeyFlags_Minus {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Minus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à N.
        /// </summary>
        public static string Enum_KeyFlags_N {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.N", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à O.
        /// </summary>
        public static string Enum_KeyFlags_O {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.O", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à P.
        /// </summary>
        public static string Enum_KeyFlags_P {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.P", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pause.
        /// </summary>
        public static string Enum_KeyFlags_Pause {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Pause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Period.
        /// </summary>
        public static string Enum_KeyFlags_Period {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Period", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Q.
        /// </summary>
        public static string Enum_KeyFlags_Q {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Q", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à R.
        /// </summary>
        public static string Enum_KeyFlags_R {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à S.
        /// </summary>
        public static string Enum_KeyFlags_S {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.S", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Semicolon.
        /// </summary>
        public static string Enum_KeyFlags_Semicolon {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Semicolon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shift.
        /// </summary>
        public static string Enum_KeyFlags_Shift {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Shift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Slash.
        /// </summary>
        public static string Enum_KeyFlags_Slash {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Slash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Space.
        /// </summary>
        public static string Enum_KeyFlags_Space {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Space", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à T.
        /// </summary>
        public static string Enum_KeyFlags_T {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tab.
        /// </summary>
        public static string Enum_KeyFlags_Tab {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à U.
        /// </summary>
        public static string Enum_KeyFlags_U {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.U", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à V.
        /// </summary>
        public static string Enum_KeyFlags_V {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.V", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à W.
        /// </summary>
        public static string Enum_KeyFlags_W {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.W", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X.
        /// </summary>
        public static string Enum_KeyFlags_X {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y.
        /// </summary>
        public static string Enum_KeyFlags_Y {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Z.
        /// </summary>
        public static string Enum_KeyFlags_Z {
            get {
                return ResourceManager.GetString("Enum.KeyFlags.Z", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à M2.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_B5 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.B5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mouse wheel click.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_B6 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.B6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mouse wheel up.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_B7 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.B7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mouse wheel down.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_B8 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.B8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y1.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_L4 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.L4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y2.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_L5 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.L5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à M3.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_R4 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.R4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y3.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_R5 {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.R5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Double tap.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_RightPadClick {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.RightPadClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hold.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_RightPadClickDown {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.RightPadClickDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Touch.
        /// </summary>
        public static string Enum_LegionController_ButtonFlags_RightPadTouch {
            get {
                return ResourceManager.GetString("Enum.LegionController.ButtonFlags.RightPadTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LegionR.
        /// </summary>
        public static string Enum_LegionGo_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.LegionGo.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LegionL.
        /// </summary>
        public static string Enum_LegionGo_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.LegionGo.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auto Roll Yaw Swap.
        /// </summary>
        public static string Enum_MotionInput_AutoRollYawSwap {
            get {
                return ResourceManager.GetString("Enum.MotionInput.AutoRollYawSwap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This input will operate as a simple joystick. Ideal for laptop and clamshell type handhelds, automatic yaw roll swap based on how device is being held (90 or 180 degree open)..
        /// </summary>
        public static string Enum_MotionInput_AutoRollYawSwap_Desc {
            get {
                return ResourceManager.GetString("Enum.MotionInput.AutoRollYawSwap.Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick Steering.
        /// </summary>
        public static string Enum_MotionInput_JoystickSteering {
            get {
                return ResourceManager.GetString("Enum.MotionInput.JoystickSteering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This input will operate as a joystick optimized for controlling a steering wheel or a racing game.
        /// </summary>
        public static string Enum_MotionInput_JoystickSteering_Desc {
            get {
                return ResourceManager.GetString("Enum.MotionInput.JoystickSteering.Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Local space.
        /// </summary>
        public static string Enum_MotionInput_LocalSpace {
            get {
                return ResourceManager.GetString("Enum.MotionInput.LocalSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Input is based on the controller’s orientation, independent of the game world or character..
        /// </summary>
        public static string Enum_MotionInput_LocalSpace_Desc {
            get {
                return ResourceManager.GetString("Enum.MotionInput.LocalSpace.Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Player space.
        /// </summary>
        public static string Enum_MotionInput_PlayerSpace {
            get {
                return ResourceManager.GetString("Enum.MotionInput.PlayerSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Input is aligned with the player character’s orientation in the game, allowing for intuitive aiming and movement..
        /// </summary>
        public static string Enum_MotionInput_PlayerSpace_Desc {
            get {
                return ResourceManager.GetString("Enum.MotionInput.PlayerSpace.Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à World space.
        /// </summary>
        public static string Enum_MotionInput_WorldSpace {
            get {
                return ResourceManager.GetString("Enum.MotionInput.WorldSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Input is mapped to the game world’s axes, providing consistent directional input regardless of the player character’s orientation..
        /// </summary>
        public static string Enum_MotionInput_WorldSpace_Desc {
            get {
                return ResourceManager.GetString("Enum.MotionInput.WorldSpace.Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LeftStick.
        /// </summary>
        public static string Enum_MotionOuput_LeftStick {
            get {
                return ResourceManager.GetString("Enum.MotionOuput.LeftStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MoveCursor.
        /// </summary>
        public static string Enum_MotionOuput_MoveCursor {
            get {
                return ResourceManager.GetString("Enum.MotionOuput.MoveCursor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RightStick.
        /// </summary>
        public static string Enum_MotionOuput_RightStick {
            get {
                return ResourceManager.GetString("Enum.MotionOuput.RightStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ScrollWheel.
        /// </summary>
        public static string Enum_MotionOuput_ScrollWheel {
            get {
                return ResourceManager.GetString("Enum.MotionOuput.ScrollWheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Stick.
        /// </summary>
        public static string Enum_MotionOutput_LeftStick {
            get {
                return ResourceManager.GetString("Enum.MotionOutput.LeftStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Stick.
        /// </summary>
        public static string Enum_MotionOutput_RightStick {
            get {
                return ResourceManager.GetString("Enum.MotionOutput.RightStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A.
        /// </summary>
        public static string Enum_NeptuneController_ButtonFlags_B1 {
            get {
                return ResourceManager.GetString("Enum.NeptuneController.ButtonFlags.B1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B.
        /// </summary>
        public static string Enum_NeptuneController_ButtonFlags_B2 {
            get {
                return ResourceManager.GetString("Enum.NeptuneController.ButtonFlags.B2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X.
        /// </summary>
        public static string Enum_NeptuneController_ButtonFlags_B3 {
            get {
                return ResourceManager.GetString("Enum.NeptuneController.ButtonFlags.B3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y.
        /// </summary>
        public static string Enum_NeptuneController_ButtonFlags_B4 {
            get {
                return ResourceManager.GetString("Enum.NeptuneController.ButtonFlags.B4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à View.
        /// </summary>
        public static string Enum_NeptuneController_ButtonFlags_Back {
            get {
                return ResourceManager.GetString("Enum.NeptuneController.ButtonFlags.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à STEAM.
        /// </summary>
        public static string Enum_NeptuneController_ButtonFlags_Special {
            get {
                return ResourceManager.GetString("Enum.NeptuneController.ButtonFlags.Special", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Menu.
        /// </summary>
        public static string Enum_NeptuneController_ButtonFlags_Start {
            get {
                return ResourceManager.GetString("Enum.NeptuneController.ButtonFlags.Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left joystick.
        /// </summary>
        public static string Enum_Output_LeftStick {
            get {
                return ResourceManager.GetString("Enum.Output.LeftStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right joystick.
        /// </summary>
        public static string Enum_Output_RightStick {
            get {
                return ResourceManager.GetString("Enum.Output.RightStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ZL.
        /// </summary>
        public static string Enum_ProController_AxisLayoutFlags_L2 {
            get {
                return ResourceManager.GetString("Enum.ProController.AxisLayoutFlags.L2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ZR.
        /// </summary>
        public static string Enum_ProController_AxisLayoutFlags_R2 {
            get {
                return ResourceManager.GetString("Enum.ProController.AxisLayoutFlags.R2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_B1 {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.B1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_B2 {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.B2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_B3 {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.B3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_B4 {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.B4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Minus.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_Back {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à L.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_L1 {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.L1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à R.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_R1 {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.R1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Home.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_Special {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.Special", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Capture.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_Special2 {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.Special2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Plus.
        /// </summary>
        public static string Enum_ProController_ButtonFlags_Start {
            get {
                return ResourceManager.GetString("Enum.ProController.ButtonFlags.Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This is your default profile. This profile will be applied for all your applications that do not have a specific profile. Some options requiring an executable might be disabled..
        /// </summary>
        public static string Enum_ProfileErrorCode_Default {
            get {
                return ResourceManager.GetString("Enum.ProfileErrorCode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oops. This profile seems to be running. Some options requiring an executable may be disabled..
        /// </summary>
        public static string Enum_ProfileErrorCode_IsRunning {
            get {
                return ResourceManager.GetString("Enum.ProfileErrorCode.IsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oops. It seems this profile does not have an executable. How is this even possible?.
        /// </summary>
        public static string Enum_ProfileErrorCode_MissingExecutable {
            get {
                return ResourceManager.GetString("Enum.ProfileErrorCode.MissingExecutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oops. It seems this profile does not have a path to the application. Some options requiring an executable might be disabled..
        /// </summary>
        public static string Enum_ProfileErrorCode_MissingPath {
            get {
                return ResourceManager.GetString("Enum.ProfileErrorCode.MissingPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oops. It seems you do not have the necessary permission level to modify the content of this application. Make sure you have started this program in administrator mode..
        /// </summary>
        public static string Enum_ProfileErrorCode_MissingPermission {
            get {
                return ResourceManager.GetString("Enum.ProfileErrorCode.MissingPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Nothing to see here..
        /// </summary>
        public static string Enum_ProfileErrorCode_None {
            get {
                return ResourceManager.GetString("Enum.ProfileErrorCode.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oops. It seems this profile excutable is running. Some options requiring an executable might be disabled..
        /// </summary>
        public static string Enum_ProfileErrorCode_Running {
            get {
                return ResourceManager.GetString("Enum.ProfileErrorCode.Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default.
        /// </summary>
        public static string Enum_QualityOfServiceLevel_Default {
            get {
                return ResourceManager.GetString("Enum.QualityOfServiceLevel.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Eco.
        /// </summary>
        public static string Enum_QualityOfServiceLevel_Eco {
            get {
                return ResourceManager.GetString("Enum.QualityOfServiceLevel.Eco", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à High.
        /// </summary>
        public static string Enum_QualityOfServiceLevel_High {
            get {
                return ResourceManager.GetString("Enum.QualityOfServiceLevel.High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Command center.
        /// </summary>
        public static string Enum_ROGAlly_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.ROGAlly.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Armory crate.
        /// </summary>
        public static string Enum_ROGAlly_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.ROGAlly.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à M1.
        /// </summary>
        public static string Enum_ROGAlly_ButtonFlags_OEM3 {
            get {
                return ResourceManager.GetString("Enum.ROGAlly.ButtonFlags.OEM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à M2.
        /// </summary>
        public static string Enum_ROGAlly_ButtonFlags_OEM4 {
            get {
                return ResourceManager.GetString("Enum.ROGAlly.ButtonFlags.OEM4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic.
        /// </summary>
        public static string Enum_ServiceStartMode_Automatic {
            get {
                return ResourceManager.GetString("Enum.ServiceStartMode.Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        public static string Enum_ServiceStartMode_Disabled {
            get {
                return ResourceManager.GetString("Enum.ServiceStartMode.Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual.
        /// </summary>
        public static string Enum_ServiceStartMode_Manual {
            get {
                return ResourceManager.GetString("Enum.ServiceStartMode.Manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Options.
        /// </summary>
        public static string Enum_SteamDeck_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.SteamDeck.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à L2.
        /// </summary>
        public static string Enum_XInputController_AxisLayoutFlags_L2 {
            get {
                return ResourceManager.GetString("Enum.XInputController.AxisLayoutFlags.L2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LeftStick.
        /// </summary>
        public static string Enum_XInputController_AxisLayoutFlags_LeftStick {
            get {
                return ResourceManager.GetString("Enum.XInputController.AxisLayoutFlags.LeftStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Thumb.
        /// </summary>
        public static string Enum_XInputController_AxisLayoutFlags_LeftThumb {
            get {
                return ResourceManager.GetString("Enum.XInputController.AxisLayoutFlags.LeftThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à R2.
        /// </summary>
        public static string Enum_XInputController_AxisLayoutFlags_R2 {
            get {
                return ResourceManager.GetString("Enum.XInputController.AxisLayoutFlags.R2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RightStick.
        /// </summary>
        public static string Enum_XInputController_AxisLayoutFlags_RightStick {
            get {
                return ResourceManager.GetString("Enum.XInputController.AxisLayoutFlags.RightStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Thumb.
        /// </summary>
        public static string Enum_XInputController_AxisLayoutFlags_RightThumb {
            get {
                return ResourceManager.GetString("Enum.XInputController.AxisLayoutFlags.RightThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B1 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B2 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B3 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B4 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B5.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B5 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B6.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B6 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B7.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B7 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à B8.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_B8 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.B8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à View.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_Back {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Down.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_DPadDown {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.DPadDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Left.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_DPadLeft {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.DPadLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Right.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_DPadRight {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.DPadRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPad Up.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_DPadUp {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.DPadUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LB.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_L1 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.L1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à L2.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_L2 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.L2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à L3.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_L3 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.L3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à L4.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_L4 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.L4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à L5.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_L5 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.L5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Thumb.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_LeftThumb {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.LeftThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Thumb Down.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_LeftThumbDown {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.LeftThumbDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Thumb Left.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_LeftThumbLeft {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.LeftThumbLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Thumb Right.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_LeftThumbRight {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.LeftThumbRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left Thumb Up.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_LeftThumbUp {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.LeftThumbUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OEM1.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_OEM1 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.OEM1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OEM2.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_OEM2 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.OEM2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OEM3.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_OEM3 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.OEM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RB.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_R1 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.R1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à R2.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_R2 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.R2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à R3.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_R3 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.R3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à R4.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_R4 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.R4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à R5.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_R5 {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.R5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Thumb.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_RightThumb {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.RightThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Thumb Down.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_RightThumbDown {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.RightThumbDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Thumb Left.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_RightThumbLeft {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.RightThumbLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Thumb Right.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_RightThumbRight {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.RightThumbRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right Thumb Up.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_RightThumbUp {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.RightThumbUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Guide.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_Special {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.Special", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Menu.
        /// </summary>
        public static string Enum_XInputController_ButtonFlags_Start {
            get {
                return ResourceManager.GetString("Enum.XInputController.ButtonFlags.Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Integer scaling is not available.
        /// </summary>
        public static string Hint_AMD_IntegerScalingCheck {
            get {
                return ResourceManager.GetString("Hint_AMD_IntegerScalingCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deploy integer scaling.
        /// </summary>
        public static string Hint_AMD_IntegerScalingCheckAction {
            get {
                return ResourceManager.GetString("Hint_AMD_IntegerScalingCheckAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Integer scaling feature is not installed, therefore you won&apos;t be able to enable or disable it.
        /// </summary>
        public static string Hint_AMD_IntegerScalingCheckDesc {
            get {
                return ResourceManager.GetString("Hint_AMD_IntegerScalingCheckDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We need to execute some script to deploy the integer scaling on your system.
        /// </summary>
        public static string Hint_AMD_IntegerScalingCheckReadme {
            get {
                return ResourceManager.GetString("Hint_AMD_IntegerScalingCheckReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Core isolation features are turned on.
        /// </summary>
        public static string Hint_CoreIsolationCheck {
            get {
                return ResourceManager.GetString("Hint_CoreIsolationCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable Core isolation.
        /// </summary>
        public static string Hint_CoreIsolationCheckAction {
            get {
                return ResourceManager.GetString("Hint_CoreIsolationCheckAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your system core isolation features are turned on, therefore TDP read/write and fan control might be disabled.
        /// </summary>
        public static string Hint_CoreIsolationCheckDesc {
            get {
                return ResourceManager.GetString("Hint_CoreIsolationCheckDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You might want to turn off core isolation and restart your system to enable TDP manipulations.
        /// </summary>
        public static string Hint_CoreIsolationCheckReadme {
            get {
                return ResourceManager.GetString("Hint_CoreIsolationCheckReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Legion Space Tasks and Services are active.
        /// </summary>
        public static string Hint_LegionGoServices {
            get {
                return ResourceManager.GetString("Hint_LegionGoServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable Legion Space.
        /// </summary>
        public static string Hint_LegionGoServicesAction {
            get {
                return ResourceManager.GetString("Hint_LegionGoServicesAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Legion Space Tasks and Services are already active on your console. This may cause compatibility issues with the application..
        /// </summary>
        public static string Hint_LegionGoServicesDesc {
            get {
                return ResourceManager.GetString("Hint_LegionGoServicesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You should disable Legion Space Tasks and Services, so that the application can run properly and without any errors.
        /// </summary>
        public static string Hint_LegionGoServicesReadme {
            get {
                return ResourceManager.GetString("Hint_LegionGoServicesReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MSI Center is running.
        /// </summary>
        public static string Hint_MSIClawCenterCheck {
            get {
                return ResourceManager.GetString("Hint_MSIClawCenterCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable MSI Center.
        /// </summary>
        public static string Hint_MSIClawCenterCheckAction {
            get {
                return ResourceManager.GetString("Hint_MSIClawCenterCheckAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MSI Center is running on your device. This may interfere with the application.
        /// </summary>
        public static string Hint_MSIClawCenterCheckDesc {
            get {
                return ResourceManager.GetString("Hint_MSIClawCenterCheckDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You should disable MSI Center, so that the application can run smoothly and without any conflicts.
        /// </summary>
        public static string Hint_MSIClawCenterCheckReadme {
            get {
                return ResourceManager.GetString("Hint_MSIClawCenterCheckReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ASUS services are running.
        /// </summary>
        public static string Hint_RogAllyServiceCheck {
            get {
                return ResourceManager.GetString("Hint_RogAllyServiceCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable ASUS services.
        /// </summary>
        public static string Hint_RogAllyServiceCheckAction {
            get {
                return ResourceManager.GetString("Hint_RogAllyServiceCheckAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ASUS services are already running on your device. This may interfere with the application.
        /// </summary>
        public static string Hint_RogAllyServiceCheckDesc {
            get {
                return ResourceManager.GetString("Hint_RogAllyServiceCheckDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You should disable ASUS services, so that the application can run smoothly and without any conflicts.
        /// </summary>
        public static string Hint_RogAllyServiceCheckReadme {
            get {
                return ResourceManager.GetString("Hint_RogAllyServiceCheckReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart Steam.
        /// </summary>
        public static string Hint_SteamNeptuneAction {
            get {
                return ResourceManager.GetString("Hint_SteamNeptuneAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Steam Desktop Layout is applied.
        /// </summary>
        public static string Hint_SteamNeptuneDesktop {
            get {
                return ResourceManager.GetString("Hint_SteamNeptuneDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Steam is already running and Steam Desktop Layout is applied. This may result in double input.
        /// </summary>
        public static string Hint_SteamNeptuneDesktopDesc {
            get {
                return ResourceManager.GetString("Hint_SteamNeptuneDesktopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You should restart Steam, so that Handheld Companion can automatically adjust Steam Desktop Layout and prevent double input.
        /// </summary>
        public static string Hint_SteamNeptuneReadme {
            get {
                return ResourceManager.GetString("Hint_SteamNeptuneReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Steam Xbox Controller Enhanced Features Driver is installed.
        /// </summary>
        public static string Hint_SteamXboxDrivers {
            get {
                return ResourceManager.GetString("Hint_SteamXboxDrivers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Steam Xbox Controller Enhanced Features Driver is installed and is breaking HidHide capacities to hide/unhide your physical controller.
        /// </summary>
        public static string Hint_SteamXboxDriversDesc {
            get {
                return ResourceManager.GetString("Hint_SteamXboxDriversDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You might want to uninstall Steam Xbox Controller Enhanced Features Driver.
        /// </summary>
        public static string Hint_SteamXboxDriversReadme {
            get {
                return ResourceManager.GetString("Hint_SteamXboxDriversReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gamepad: {0}.
        /// </summary>
        public static string IController_ControllerIndex {
            get {
                return ResourceManager.GetString("IController_ControllerIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease brightness.
        /// </summary>
        public static string InputsHotkey_decreaseBrightness {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease the current display brightness by 5%.
        /// </summary>
        public static string InputsHotkey_decreaseBrightnessDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseBrightnessDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease thermal power limit (TDP).
        /// </summary>
        public static string InputsHotkey_decreaseTDP {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease system or currently applied profile TDP by one watt.
        /// </summary>
        public static string InputsHotkey_decreaseTDPDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease volume.
        /// </summary>
        public static string InputsHotkey_decreaseVolume {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease the system volume by 5%.
        /// </summary>
        public static string InputsHotkey_decreaseVolumeDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseVolumeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Desktop layout.
        /// </summary>
        public static string InputsHotkey_DesktopLayoutEnabled {
            get {
                return ResourceManager.GetString("InputsHotkey_DesktopLayoutEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle Desktop controller layout.
        /// </summary>
        public static string InputsHotkey_DesktopLayoutEnabledDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_DesktopLayoutEnabledDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press to define trigger.
        /// </summary>
        public static string InputsHotkey_fallbackInput {
            get {
                return ResourceManager.GetString("InputsHotkey_fallbackInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press to define keyboard output.
        /// </summary>
        public static string InputsHotkey_fallbackOutput {
            get {
                return ResourceManager.GetString("InputsHotkey_fallbackOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase brightness.
        /// </summary>
        public static string InputsHotkey_increaseBrightness {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase the current display brightness by 5%.
        /// </summary>
        public static string InputsHotkey_increaseBrightnessDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseBrightnessDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase thermal power limit (TDP).
        /// </summary>
        public static string InputsHotkey_increaseTDP {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase system or currently applied profile TDP by one watt.
        /// </summary>
        public static string InputsHotkey_increaseTDPDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase volume.
        /// </summary>
        public static string InputsHotkey_increaseVolume {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase the system volume by 5%.
        /// </summary>
        public static string InputsHotkey_increaseVolumeDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseVolumeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select next sub profile.
        /// </summary>
        public static string InputsHotkey_nextSubProfile {
            get {
                return ResourceManager.GetString("InputsHotkey_nextSubProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Apply next sub profile for the current game.
        /// </summary>
        public static string InputsHotkey_nextSubProfileDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_nextSubProfileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à On-screen display.
        /// </summary>
        public static string InputsHotkey_OnScreenDisplay {
            get {
                return ResourceManager.GetString("InputsHotkey_OnScreenDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable on-screen display support.
        /// </summary>
        public static string InputsHotkey_OnScreenDisplayDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_OnScreenDisplayDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à On Screen Overlay.
        /// </summary>
        public static string InputsHotkey_OnScreenDisplayToggle {
            get {
                return ResourceManager.GetString("InputsHotkey_OnScreenDisplayToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle on screen overlay.
        /// </summary>
        public static string InputsHotkey_OnScreenDisplayToggleDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_OnScreenDisplayToggleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display 3D controller.
        /// </summary>
        public static string InputsHotkey_overlayGamepad {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayGamepad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_overlayGamepadDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayGamepadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display virtual trackpads.
        /// </summary>
        public static string InputsHotkey_overlayTrackpads {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayTrackpads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_overlayTrackpadsDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayTrackpadsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select previous sub profile.
        /// </summary>
        public static string InputsHotkey_previousSubProfile {
            get {
                return ResourceManager.GetString("InputsHotkey_previousSubProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Apply previous sub profile for the current game.
        /// </summary>
        public static string InputsHotkey_previousSubProfileDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_previousSubProfileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Summon quick tools window.
        /// </summary>
        public static string InputsHotkey_quickTools {
            get {
                return ResourceManager.GetString("InputsHotkey_quickTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_quickToolsDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_quickToolsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fan override.
        /// </summary>
        public static string InputsHotkey_QuietModeToggled {
            get {
                return ResourceManager.GetString("InputsHotkey_QuietModeToggled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set the fan duty cycle to user-defined value.
        /// </summary>
        public static string InputsHotkey_QuietModeToggledDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_QuietModeToggledDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle emulated controller type.
        /// </summary>
        public static string InputsHotkey_shortcutChangeHIDMode {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutChangeHIDMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle between Xbox 360 and Dualshock 4 emulated controllers.
        /// </summary>
        public static string InputsHotkey_shortcutChangeHIDModeDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutChangeHIDModeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display Action center.
        /// </summary>
        public static string InputsHotkey_shortcutControlCenter {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutControlCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display and hide Windows Action center.
        /// </summary>
        public static string InputsHotkey_shortcutControlCenterDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutControlCenterDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom shortcut.
        /// </summary>
        public static string InputsHotkey_shortcutCustom {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutCustomDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutCustomDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display and hide the desktop.
        /// </summary>
        public static string InputsHotkey_shortcutDesktop {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Windows + D.
        /// </summary>
        public static string InputsHotkey_shortcutDesktopDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutDesktopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Escape.
        /// </summary>
        public static string InputsHotkey_shortcutESC {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Escape.
        /// </summary>
        public static string InputsHotkey_shortcutESCDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutESCDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Switches between window and full screen.
        /// </summary>
        public static string InputsHotkey_shortcutExpand {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutExpand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Alt + Enter.
        /// </summary>
        public static string InputsHotkey_shortcutExpandDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutExpandDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Guide or PS button.
        /// </summary>
        public static string InputsHotkey_shortcutGuide {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulate a Xbox Guide or Sony PS button input.
        /// </summary>
        public static string InputsHotkey_shortcutGuideDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutGuideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display touch keyboard.
        /// </summary>
        public static string InputsHotkey_shortcutKeyboard {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutKeyboardDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKeyboardDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Force application shutdown.
        /// </summary>
        public static string InputsHotkey_shortcutKillApp {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKillApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutKillAppDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKillAppDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display and hide main window.
        /// </summary>
        public static string InputsHotkey_shortcutMainwindow {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutMainwindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutMainwindowDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutMainwindowDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Snipping tool.
        /// </summary>
        public static string InputsHotkey_shortcutPrintScreen {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutPrintScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Windows + Shift + S.
        /// </summary>
        public static string InputsHotkey_shortcutPrintScreenDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutPrintScreenDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Task Manager.
        /// </summary>
        public static string InputsHotkey_shortcutTaskManager {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Ctrl + Shift + Esc.
        /// </summary>
        public static string InputsHotkey_shortcutTaskManagerDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskManagerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Task view.
        /// </summary>
        public static string InputsHotkey_shortcutTaskview {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Windows + Tab.
        /// </summary>
        public static string InputsHotkey_shortcutTaskviewDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskviewDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle Suspender.
        /// </summary>
        public static string InputsHotkey_suspendResumeTask {
            get {
                return ResourceManager.GetString("InputsHotkey_suspendResumeTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspend or resume the foreground application.
        /// </summary>
        public static string InputsHotkey_suspendResumeTaskDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_suspendResumeTaskDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LEFT JOYSTICK.
        /// </summary>
        public static string JoystickPage_Joystick_Left {
            get {
                return ResourceManager.GetString("JoystickPage_Joystick_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LEFT JOYSTICK BUTTONS.
        /// </summary>
        public static string JoystickPage_Joystick_Left_Buttons {
            get {
                return ResourceManager.GetString("JoystickPage_Joystick_Left_Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RIGHT JOYSTICK.
        /// </summary>
        public static string JoystickPage_Joystick_Right {
            get {
                return ResourceManager.GetString("JoystickPage_Joystick_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RIGHT JOYSTICK BUTTONS.
        /// </summary>
        public static string JoystickPage_Joystick_Right_Buttons {
            get {
                return ResourceManager.GetString("JoystickPage_Joystick_Right_Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Apply template.
        /// </summary>
        public static string LayoutPage_ApplyTemplate {
            get {
                return ResourceManager.GetString("LayoutPage_ApplyTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Buttons.
        /// </summary>
        public static string LayoutPage_Buttons {
            get {
                return ResourceManager.GetString("LayoutPage_Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel.
        /// </summary>
        public static string LayoutPage_Cancel {
            get {
                return ResourceManager.GetString("LayoutPage_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à COMMUNITY.
        /// </summary>
        public static string LayoutPage_Community {
            get {
                return ResourceManager.GetString("LayoutPage_Community", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Confirm.
        /// </summary>
        public static string LayoutPage_Confirm {
            get {
                return ResourceManager.GetString("LayoutPage_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dpad.
        /// </summary>
        public static string LayoutPage_Dpad {
            get {
                return ResourceManager.GetString("LayoutPage_Dpad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export for current controller.
        /// </summary>
        public static string LayoutPage_ExportCurrentController {
            get {
                return ResourceManager.GetString("LayoutPage_ExportCurrentController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export layout.
        /// </summary>
        public static string LayoutPage_ExportLayout {
            get {
                return ResourceManager.GetString("LayoutPage_ExportLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gyro.
        /// </summary>
        public static string LayoutPage_Gyro {
            get {
                return ResourceManager.GetString("LayoutPage_Gyro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joysticks.
        /// </summary>
        public static string LayoutPage_Joysticks {
            get {
                return ResourceManager.GetString("LayoutPage_Joysticks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Layout author.
        /// </summary>
        public static string LayoutPage_LayoutAuthor {
            get {
                return ResourceManager.GetString("LayoutPage_LayoutAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Layout description.
        /// </summary>
        public static string LayoutPage_LayoutDesc {
            get {
                return ResourceManager.GetString("LayoutPage_LayoutDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Layout title.
        /// </summary>
        public static string LayoutPage_LayoutTitle {
            get {
                return ResourceManager.GetString("LayoutPage_LayoutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save game information with the layout.
        /// </summary>
        public static string LayoutPage_SaveGameInfoLayout {
            get {
                return ResourceManager.GetString("LayoutPage_SaveGameInfoLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Make this the default layout.
        /// </summary>
        public static string LayoutPage_SetAsDefault {
            get {
                return ResourceManager.GetString("LayoutPage_SetAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show current controller templates only.
        /// </summary>
        public static string LayoutPage_ShowCurrentControllerTemplates {
            get {
                return ResourceManager.GetString("LayoutPage_ShowCurrentControllerTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Layout template picker.
        /// </summary>
        public static string LayoutPage_TemplatePicker {
            get {
                return ResourceManager.GetString("LayoutPage_TemplatePicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à TEMPLATES.
        /// </summary>
        public static string LayoutPage_Templates {
            get {
                return ResourceManager.GetString("LayoutPage_Templates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trackpads.
        /// </summary>
        public static string LayoutPage_Trackpads {
            get {
                return ResourceManager.GetString("LayoutPage_Trackpads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Triggers.
        /// </summary>
        public static string LayoutPage_Triggers {
            get {
                return ResourceManager.GetString("LayoutPage_Triggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Back.
        /// </summary>
        public static string MainWindow_Back {
            get {
                return ResourceManager.GetString("MainWindow_Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes.
        /// </summary>
        public static string MainWindow_ControllerManagementClosePrimary {
            get {
                return ResourceManager.GetString("MainWindow_ControllerManagementClosePrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No.
        /// </summary>
        public static string MainWindow_ControllerManagementCloseSecondary {
            get {
                return ResourceManager.GetString("MainWindow_ControllerManagementCloseSecondary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Improve virtual controller detection might not work if you close Handheld Companion. Are you sure ?.
        /// </summary>
        public static string MainWindow_ControllerManagementCloseText {
            get {
                return ResourceManager.GetString("MainWindow_ControllerManagementCloseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Warning.
        /// </summary>
        public static string MainWindow_ControllerManagementCloseTitle {
            get {
                return ResourceManager.GetString("MainWindow_ControllerManagementCloseTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Exit.
        /// </summary>
        public static string MainWindow_Exit {
            get {
                return ResourceManager.GetString("MainWindow_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Handheld Companion.
        /// </summary>
        public static string MainWindow_HandheldCompanion {
            get {
                return ResourceManager.GetString("MainWindow_HandheldCompanion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Main Window.
        /// </summary>
        public static string MainWindow_MainWindow {
            get {
                return ResourceManager.GetString("MainWindow_MainWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        public static string MainWindow_navAbout {
            get {
                return ResourceManager.GetString("MainWindow_navAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller.
        /// </summary>
        public static string MainWindow_navController {
            get {
                return ResourceManager.GetString("MainWindow_navController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device.
        /// </summary>
        public static string MainWindow_navDevice {
            get {
                return ResourceManager.GetString("MainWindow_navDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hotkeys.
        /// </summary>
        public static string MainWindow_navHotkeys {
            get {
                return ResourceManager.GetString("MainWindow_navHotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Navigate.
        /// </summary>
        public static string MainWindow_Navigate {
            get {
                return ResourceManager.GetString("MainWindow_Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notifications.
        /// </summary>
        public static string MainWindow_navNotifications {
            get {
                return ResourceManager.GetString("MainWindow_navNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string MainWindow_navOverlay {
            get {
                return ResourceManager.GetString("MainWindow_navOverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Performance.
        /// </summary>
        public static string MainWindow_navPerformance {
            get {
                return ResourceManager.GetString("MainWindow_navPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profiles.
        /// </summary>
        public static string MainWindow_navProfiles {
            get {
                return ResourceManager.GetString("MainWindow_navProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OK.
        /// </summary>
        public static string MainWindow_OK {
            get {
                return ResourceManager.GetString("MainWindow_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quick Tools.
        /// </summary>
        public static string MainWindow_QuickTools {
            get {
                return ResourceManager.GetString("MainWindow_QuickTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select.
        /// </summary>
        public static string MainWindow_Select {
            get {
                return ResourceManager.GetString("MainWindow_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings.
        /// </summary>
        public static string MainWindow_Settings {
            get {
                return ResourceManager.GetString("MainWindow_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle.
        /// </summary>
        public static string MainWindow_Toggle {
            get {
                return ResourceManager.GetString("MainWindow_Toggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No notifications yet.
        /// </summary>
        public static string NotificationsPage_NothingToSee {
            get {
                return ResourceManager.GetString("NotificationsPage_NothingToSee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You have no notifications right now..
        /// </summary>
        public static string NotificationsPage_NothingToSeeDesc {
            get {
                return ResourceManager.GetString("NotificationsPage_NothingToSeeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string Overlay_Overlay {
            get {
                return ResourceManager.GetString("Overlay_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 8BitDo Lite 2.
        /// </summary>
        public static string OverlayPage_8BitDoLite2Controller {
            get {
                return ResourceManager.GetString("OverlayPage_8BitDoLite2Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alignment.
        /// </summary>
        public static string OverlayPage_Alignment {
            get {
                return ResourceManager.GetString("OverlayPage_Alignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay alignment.
        /// </summary>
        public static string OverlayPage_AlignmentDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlignmentDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change trackpads overlay alignment.
        /// </summary>
        public static string OverlayPage_AlignmentTrackpadDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlignmentTrackpadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Always on top.
        /// </summary>
        public static string OverlayPage_AlwaysOnTop {
            get {
                return ResourceManager.GetString("OverlayPage_AlwaysOnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When toggled, 3D controller overlay will stay on top of other windows.
        /// </summary>
        public static string OverlayPage_AlwaysOnTopDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlwaysOnTopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Back.
        /// </summary>
        public static string OverlayPage_BackButton {
            get {
                return ResourceManager.GetString("OverlayPage_BackButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Battery Level.
        /// </summary>
        public static string OverlayPage_BATTLevel {
            get {
                return ResourceManager.GetString("OverlayPage_BATTLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The level of information for your battery..
        /// </summary>
        public static string OverlayPage_BATTLevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_BATTLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Face camera.
        /// </summary>
        public static string OverlayPage_CameraAngle {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay model behaviour for facing the camera.
        /// </summary>
        public static string OverlayPage_CameraAngleDesc {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAngleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stationary pitch.
        /// </summary>
        public static string OverlayPage_CameraAnglePitch {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAnglePitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the angle.
        /// </summary>
        public static string OverlayPage_CameraAnglePitchDesc {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAnglePitchDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Background Color.
        /// </summary>
        public static string OverlayPage_Color {
            get {
                return ResourceManager.GetString("OverlayPage_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay background color.
        /// </summary>
        public static string OverlayPage_ColorDesc {
            get {
                return ResourceManager.GetString("OverlayPage_ColorDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller options.
        /// </summary>
        public static string OverlayPage_ControllerOptions {
            get {
                return ResourceManager.GetString("OverlayPage_ControllerOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CPU Level.
        /// </summary>
        public static string OverlayPage_CPULevel {
            get {
                return ResourceManager.GetString("OverlayPage_CPULevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The level of information for your CPU..
        /// </summary>
        public static string OverlayPage_CPULevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_CPULevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom Settings.
        /// </summary>
        public static string OverlayPage_CustomSettings {
            get {
                return ResourceManager.GetString("OverlayPage_CustomSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PlayStation DualSense.
        /// </summary>
        public static string OverlayPage_DualSenseController {
            get {
                return ResourceManager.GetString("OverlayPage_DualSenseController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated controller.
        /// </summary>
        public static string OverlayPage_EmulatedController {
            get {
                return ResourceManager.GetString("OverlayPage_EmulatedController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Face camera.
        /// </summary>
        public static string OverlayPage_FaceCamera {
            get {
                return ResourceManager.GetString("OverlayPage_FaceCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 3D Model slowly rotates to face camera as default position.
        /// </summary>
        public static string OverlayPage_FaceCameraDesc {
            get {
                return ResourceManager.GetString("OverlayPage_FaceCameraDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FPS Level.
        /// </summary>
        public static string OverlayPage_FPSLevel {
            get {
                return ResourceManager.GetString("OverlayPage_FPSLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The level of information for your FPS..
        /// </summary>
        public static string OverlayPage_FPSLevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_FPSLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPU Level.
        /// </summary>
        public static string OverlayPage_GPULevel {
            get {
                return ResourceManager.GetString("OverlayPage_GPULevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The level of information for your GPU..
        /// </summary>
        public static string OverlayPage_GPULevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_GPULevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Listening....
        /// </summary>
        public static string OverlayPage_Listening {
            get {
                return ResourceManager.GetString("OverlayPage_Listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MACHENIKE HG510.
        /// </summary>
        public static string OverlayPage_MachenikeHG510Controller {
            get {
                return ResourceManager.GetString("OverlayPage_MachenikeHG510Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Main trigger.
        /// </summary>
        public static string OverlayPage_MainTrigger {
            get {
                return ResourceManager.GetString("OverlayPage_MainTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay main trigger.
        /// </summary>
        public static string OverlayPage_MainTriggerDesc {
            get {
                return ResourceManager.GetString("OverlayPage_MainTriggerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ms.
        /// </summary>
        public static string OverlayPage_Millisecond {
            get {
                return ResourceManager.GetString("OverlayPage_Millisecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion.
        /// </summary>
        public static string OverlayPage_MotionActivated {
            get {
                return ResourceManager.GetString("OverlayPage_MotionActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Model will move in accordance with user movements based on sensor information.
        /// </summary>
        public static string OverlayPage_MotionActivatedDesc {
            get {
                return ResourceManager.GetString("OverlayPage_MotionActivatedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à N64.
        /// </summary>
        public static string OverlayPage_N64Controller {
            get {
                return ResourceManager.GetString("OverlayPage_N64Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OEM controller.
        /// </summary>
        public static string OverlayPage_OEMController {
            get {
                return ResourceManager.GetString("OverlayPage_OEMController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Opacity.
        /// </summary>
        public static string OverlayPage_Opacity {
            get {
                return ResourceManager.GetString("OverlayPage_Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay opacity.
        /// </summary>
        public static string OverlayPage_OpacityControllerDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OpacityControllerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change trackpads overlay opacity.
        /// </summary>
        public static string OverlayPage_OpacityTrackpadDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OpacityTrackpadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string OverlayPage_Overlay {
            get {
                return ResourceManager.GetString("OverlayPage_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        public static string OverlayPage_OverlayDisplayCustomLevel_Disabled {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayCustomLevel_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Full.
        /// </summary>
        public static string OverlayPage_OverlayDisplayCustomLevel_Full {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayCustomLevel_Full", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Minimal.
        /// </summary>
        public static string OverlayPage_OverlayDisplayCustomLevel_Minimal {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayCustomLevel_Minimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay display level.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel_Custom {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel_Disabled {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extended.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel_Extended {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel_Extended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel_External {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel_External", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Full.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel_Full {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel_Full", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Minimal.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel_Minimal {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel_Minimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the on-screen display level of information.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update rate.
        /// </summary>
        public static string OverlayPage_OverlayDisplayUpdateRate {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayUpdateRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the on-screen display update rate.
        /// </summary>
        public static string OverlayPage_OverlayDisplayUpdateRateDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayUpdateRateDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay model.
        /// </summary>
        public static string OverlayPage_OverlayModel {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay model.
        /// </summary>
        public static string OverlayPage_OverlayModelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayModelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay preview.
        /// </summary>
        public static string OverlayPage_OverlayPreview {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RAM Level.
        /// </summary>
        public static string OverlayPage_RAMLevel {
            get {
                return ResourceManager.GetString("OverlayPage_RAMLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The level of information for your RAM..
        /// </summary>
        public static string OverlayPage_RAMLevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RAMLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Render settings.
        /// </summary>
        public static string OverlayPage_RenderSettings {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Anti-Aliasing.
        /// </summary>
        public static string OverlayPage_RenderSettingsAntialiasing {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsAntialiasing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the render anti-aliasing status.
        /// </summary>
        public static string OverlayPage_RenderSettingsAntialiasingDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsAntialiasingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the render settings of your stationary 3D overlay controller model.
        /// </summary>
        public static string OverlayPage_RenderSettingsDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update rate.
        /// </summary>
        public static string OverlayPage_RenderSettingsFramerate {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsFramerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the render update rate, in update per second.
        /// </summary>
        public static string OverlayPage_RenderSettingsFramerateDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsFramerateDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Size.
        /// </summary>
        public static string OverlayPage_Size {
            get {
                return ResourceManager.GetString("OverlayPage_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay size.
        /// </summary>
        public static string OverlayPage_SizeDesc {
            get {
                return ResourceManager.GetString("OverlayPage_SizeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change trackpads overlay size.
        /// </summary>
        public static string OverlayPage_SizeOverlayDesc {
            get {
                return ResourceManager.GetString("OverlayPage_SizeOverlayDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start.
        /// </summary>
        public static string OverlayPage_StartButton {
            get {
                return ResourceManager.GetString("OverlayPage_StartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Time Level.
        /// </summary>
        public static string OverlayPage_TimeLevel {
            get {
                return ResourceManager.GetString("OverlayPage_TimeLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The level of information for your time..
        /// </summary>
        public static string OverlayPage_TimeLevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_TimeLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fisher-Price controller.
        /// </summary>
        public static string OverlayPage_ToyController {
            get {
                return ResourceManager.GetString("OverlayPage_ToyController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trackpads options.
        /// </summary>
        public static string OverlayPage_TrackpadsOptions {
            get {
                return ResourceManager.GetString("OverlayPage_TrackpadsOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à VRAM Level.
        /// </summary>
        public static string OverlayPage_VRAMLevel {
            get {
                return ResourceManager.GetString("OverlayPage_VRAMLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The level of information for your VRAM..
        /// </summary>
        public static string OverlayPage_VRAMLevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_VRAMLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Xbox One.
        /// </summary>
        public static string OverlayPage_XboxOneController {
            get {
                return ResourceManager.GetString("OverlayPage_XboxOneController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ZD O+.
        /// </summary>
        public static string OverlayPage_ZDOPlusController {
            get {
                return ResourceManager.GetString("OverlayPage_ZDOPlusController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Performance.
        /// </summary>
        public static string PerformancePage_Device {
            get {
                return ResourceManager.GetString("PerformancePage_Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default power and fan speed for optimal performance, temperature, noise, and battery life..
        /// </summary>
        public static string PowerProfileDefaultDescription {
            get {
                return ResourceManager.GetString("PowerProfileDefaultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default.
        /// </summary>
        public static string PowerProfileDefaultName {
            get {
                return ResourceManager.GetString("PowerProfileDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preset similar to Balanced Mode in LS. TDP Limit: 15W.
        /// </summary>
        public static string PowerProfileLegionGoBetterPerformanceDesc {
            get {
                return ResourceManager.GetString("PowerProfileLegionGoBetterPerformanceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Legion Go - Balanced.
        /// </summary>
        public static string PowerProfileLegionGoBetterPerformance {
            get {
                return ResourceManager.GetString("PowerProfileLegionGoBetterPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preset similar to Performance Mode in LS. TDP Limit: 20W.
        /// </summary>
        public static string PowerProfileLegionGoBestPerformanceDesc {
            get {
                return ResourceManager.GetString("PowerProfileLegionGoBestPerformanceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Legion Go - Performance.
        /// </summary>
        public static string PowerProfileLegionGoBestPerformance {
            get {
                return ResourceManager.GetString("PowerProfileLegionGoBestPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preset similar to Quiet Mode in LS. TDP Limit: 8W.
        /// </summary>
        public static string PowerProfileLegionGoBetterBatteryDesc {
            get {
                return ResourceManager.GetString("PowerProfileLegionGoBetterBatteryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Legion Go - Quiet.
        /// </summary>
        public static string PowerProfileLegionGoBetterBattery {
            get {
                return ResourceManager.GetString("PowerProfileLegionGoBetterBattery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User-defined power and fan speed..
        /// </summary>
        public static string PowerProfileManualDescription {
            get {
                return ResourceManager.GetString("PowerProfileManualDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual mode: {0}.
        /// </summary>
        public static string PowerProfileManualName {
            get {
                return ResourceManager.GetString("PowerProfileManualName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extreme Performance.
        /// </summary>
        public static string PowerProfileMSIClawBestPerformance {
            get {
                return ResourceManager.GetString("PowerProfileMSIClawBestPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The best system performance for multi-tasking and heavy duty..
        /// </summary>
        public static string PowerProfileMSIClawBestPerformanceDesc {
            get {
                return ResourceManager.GetString("PowerProfileMSIClawBestPerformanceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Super Battery.
        /// </summary>
        public static string PowerProfileMSIClawBetterBattery {
            get {
                return ResourceManager.GetString("PowerProfileMSIClawBetterBattery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The longest possible battery life..
        /// </summary>
        public static string PowerProfileMSIClawBetterBatteryDesc {
            get {
                return ResourceManager.GetString("PowerProfileMSIClawBetterBatteryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Balanced.
        /// </summary>
        public static string PowerProfileMSIClawBetterPerformance {
            get {
                return ResourceManager.GetString("PowerProfileMSIClawBetterPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The best system settings that MSI recommends..
        /// </summary>
        public static string PowerProfileMSIClawBetterPerformanceDesc {
            get {
                return ResourceManager.GetString("PowerProfileMSIClawBetterPerformanceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Balances performance, temperature and acoustic for any scenario..
        /// </summary>
        public static string PowerProfileROGAllyBetterPerformanceDesc {
            get {
                return ResourceManager.GetString("PowerProfileROGAllyBetterPerformanceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ROG Ally - Performance.
        /// </summary>
        public static string PowerProfileROGAllyBetterPerformance {
            get {
                return ResourceManager.GetString("PowerProfileROGAllyBetterPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Limits CPU and GPU power, but keeps noise levels quiet..
        /// </summary>
        public static string PowerProfileROGAllyBetterBatteryDesc {
            get {
                return ResourceManager.GetString("PowerProfileROGAllyBetterBatteryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ROG Ally - Silent.
        /// </summary>
        public static string PowerProfileROGAllyBetterBattery {
            get {
                return ResourceManager.GetString("PowerProfileROGAllyBetterBattery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximizes power to the CPU and GPU for high-performance gaming and work, with maximum airflow from fans..
        /// </summary>
        public static string PowerProfileROGAllyBestPerformanceDesc {
            get {
                return ResourceManager.GetString("PowerProfileROGAllyBestPerformanceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ROG Ally - Turbo.
        /// </summary>
        public static string PowerProfileROGAllyBestPerformance {
            get {
                return ResourceManager.GetString("PowerProfileROGAllyBestPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device presets.
        /// </summary>
        public static string PowerProfilesPage_DevicePresets {
            get {
                return ResourceManager.GetString("PowerProfilesPage_DevicePresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preset selection.
        /// </summary>
        public static string PowerProfilesPage_PresetSelection {
            get {
                return ResourceManager.GetString("PowerProfilesPage_PresetSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the preset you would like to edit.
        /// </summary>
        public static string PowerProfilesPage_PresetSelectionDesc {
            get {
                return ResourceManager.GetString("PowerProfilesPage_PresetSelectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User presets.
        /// </summary>
        public static string PowerProfilesPage_UserPresets {
            get {
                return ResourceManager.GetString("PowerProfilesPage_UserPresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resume.
        /// </summary>
        public static string ProcessEx_processResume {
            get {
                return ResourceManager.GetString("ProcessEx_processResume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspend.
        /// </summary>
        public static string ProcessEx_processSuspend {
            get {
                return ResourceManager.GetString("ProcessEx_processSuspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Accelerometer multiplier.
        /// </summary>
        public static string ProfilesPage_AccelerometerMultiplier {
            get {
                return ResourceManager.GetString("ProfilesPage_AccelerometerMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the system reported accelerometer value.
        /// </summary>
        public static string ProfilesPage_AccelerometerMultiplierDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AccelerometerMultiplierDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Additional settings.
        /// </summary>
        public static string ProfilesPage_AdditionalSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Anti-deadzone.
        /// </summary>
        public static string ProfilesPage_AntiDeadzone {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the in-game anti-deadzone, in percentage.
        /// </summary>
        public static string ProfilesPage_AntiDeadzoneDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  %.
        /// </summary>
        public static string ProfilesPage_AntiDeadzoneUnitPercentage {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzoneUnitPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to apply this template? All layout settings will be overridden..
        /// </summary>
        public static string ProfilesPage_AreYouSureApplyTemplate1 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureApplyTemplate1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You can&apos;t undo this action. Previously applied template: {0}.
        /// </summary>
        public static string ProfilesPage_AreYouSureApplyTemplate2 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureApplyTemplate2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to delete?.
        /// </summary>
        public static string ProfilesPage_AreYouSureDelete1 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureDelete1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This item will be deleted immediatly. You can&apos;t undo this action..
        /// </summary>
        public static string ProfilesPage_AreYouSureDelete2 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureDelete2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to overwrite this profile?.
        /// </summary>
        public static string ProfilesPage_AreYouSureOverwrite1 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureOverwrite1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} will be overwriten. You can&apos;t undo this action..
        /// </summary>
        public static string ProfilesPage_AreYouSureOverwrite2 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureOverwrite2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic TDP.
        /// </summary>
        public static string ProfilesPage_AutoTDP {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic adjustment of TDP based on measured FPS and requested FPS target.
        /// </summary>
        public static string ProfilesPage_AutoTDPDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Framerate target.
        /// </summary>
        public static string ProfilesPage_AutoTDPFPS {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDPFPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Desired FPS target value for automatic TDP controller.
        /// </summary>
        public static string ProfilesPage_AutoTDPFPSDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDPFPSDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boost power limit.
        /// </summary>
        public static string ProfilesPage_BoostPower {
            get {
                return ResourceManager.GetString("ProfilesPage_BoostPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change boost thermal power limit.
        /// </summary>
        public static string ProfilesPage_BoostPowerDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_BoostPowerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel.
        /// </summary>
        public static string ProfilesPage_Cancel {
            get {
                return ResourceManager.GetString("ProfilesPage_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Roll/Yaw.
        /// </summary>
        public static string ProfilesPage_Combined {
            get {
                return ResourceManager.GetString("ProfilesPage_Combined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller layout.
        /// </summary>
        public static string ProfilesPage_ControllerLayout {
            get {
                return ResourceManager.GetString("ProfilesPage_ControllerLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the virtual controller layout.
        /// </summary>
        public static string ProfilesPage_ControllerLayoutDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ControllerLayoutDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller settings.
        /// </summary>
        public static string ProfilesPage_ControllerSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_ControllerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the virtual controller settings.
        /// </summary>
        public static string ProfilesPage_ControllerSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ControllerSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CPU.
        /// </summary>
        public static string ProfilesPage_CPU {
            get {
                return ResourceManager.GetString("ProfilesPage_CPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CPU Clock max frequency.
        /// </summary>
        public static string ProfilesPage_CPUMhz {
            get {
                return ResourceManager.GetString("ProfilesPage_CPUMhz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create a new profile.
        /// </summary>
        public static string ProfilesPage_CreateNewProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_CreateNewProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create a new power preset.
        /// </summary>
        public static string ProfilesPage_CreatePowerProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_CreatePowerProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create power preset.
        /// </summary>
        public static string ProfilesPage_CreatePowerProfileButton {
            get {
                return ResourceManager.GetString("ProfilesPage_CreatePowerProfileButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This is a default device preset and cannot be edited. These are comparable to the presets provided by the devices original software..
        /// </summary>
        public static string ProfilesPage_DefaultDeviceProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_DefaultDeviceProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This is the default preset, you cannot modify the fan curve on this preset..
        /// </summary>
        public static string ProfilesPage_DefaultProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_DefaultProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete.
        /// </summary>
        public static string ProfilesPage_Delete {
            get {
                return ResourceManager.GetString("ProfilesPage_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete power preset.
        /// </summary>
        public static string ProfilesPage_DeletePowerProfileButton {
            get {
                return ResourceManager.GetString("ProfilesPage_DeletePowerProfileButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete profile.
        /// </summary>
        public static string ProfilesPage_DeleteProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_DeleteProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated controller type.
        /// </summary>
        public static string ProfilesPage_EmulatedController {
            get {
                return ResourceManager.GetString("ProfilesPage_EmulatedController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default.
        /// </summary>
        public static string ProfilesPage_EmulatedControllerDefault {
            get {
                return ResourceManager.GetString("ProfilesPage_EmulatedControllerDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The emulated controller to be used when this profile is active.
        /// </summary>
        public static string ProfilesPage_EmulatedControllerDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_EmulatedControllerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated DualShock 4 controller.
        /// </summary>
        public static string ProfilesPage_EmulatedControllerDS4 {
            get {
                return ResourceManager.GetString("ProfilesPage_EmulatedControllerDS4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated XBOX 360 controller.
        /// </summary>
        public static string ProfilesPage_EmulatedControllerXbox {
            get {
                return ResourceManager.GetString("ProfilesPage_EmulatedControllerXbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User per-game profile.
        /// </summary>
        public static string ProfilesPage_EnableProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_EnableProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The profile will be automatically applied when the associated application is detected.
        /// </summary>
        public static string ProfilesPage_EnableProfileDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_EnableProfileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Energy performance preference (EPP).
        /// </summary>
        public static string ProfilesPage_EPP {
            get {
                return ResourceManager.GetString("ProfilesPage_EPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CPU/GPU power balance.
        /// </summary>
        public static string ProfilesPage_EPPBalance {
            get {
                return ResourceManager.GetString("ProfilesPage_EPPBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Specifies power distribution policy between CPU and GPU.
        /// </summary>
        public static string ProfilesPage_EPPDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_EPPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fan settings.
        /// </summary>
        public static string ProfilesPage_FanSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_FanSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the fan settings.
        /// </summary>
        public static string ProfilesPage_FanSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_FanSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Framerate limit.
        /// </summary>
        public static string ProfilesPage_FramerateLimit {
            get {
                return ResourceManager.GetString("ProfilesPage_FramerateLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Limits framerate for 3D applications.
        /// </summary>
        public static string ProfilesPage_FramerateLimitDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_FramerateLimitDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Global settings.
        /// </summary>
        public static string ProfilesPage_GlobalSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_GlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the global profiles settings.
        /// </summary>
        public static string ProfilesPage_GlobalSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GlobalSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPU.
        /// </summary>
        public static string ProfilesPage_GPU {
            get {
                return ResourceManager.GetString("ProfilesPage_GPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPU Clock max frequency.
        /// </summary>
        public static string ProfilesPage_GPUMhz {
            get {
                return ResourceManager.GetString("ProfilesPage_GPUMhz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximum clock speed of the GPU in Mhz.
        /// </summary>
        public static string ProfilesPage_GPUMhzDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GPUMhzDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPU Scaling.
        /// </summary>
        public static string ProfilesPage_GPUScaling {
            get {
                return ResourceManager.GetString("ProfilesPage_GPUScaling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPU will scale up lower resolutions to fit the display.
        /// </summary>
        public static string ProfilesPage_GPUScalingDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GPUScalingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Graphics settings.
        /// </summary>
        public static string ProfilesPage_GraphicsSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_GraphicsSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the graphics settings.
        /// </summary>
        public static string ProfilesPage_GraphicsSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GraphicsSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gyrometer multiplier.
        /// </summary>
        public static string ProfilesPage_GyrometerMultiplier {
            get {
                return ResourceManager.GetString("ProfilesPage_GyrometerMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the system reported gyrometer value.
        /// </summary>
        public static string ProfilesPage_GyrometerMultiplierDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GyrometerMultiplierDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gyro steering axis.
        /// </summary>
        public static string ProfilesPage_GyroSteeringAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_GyroSteeringAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à For controlling the horizontal movement of the controller, you can use either the yaw or roll axis.
        /// </summary>
        public static string ProfilesPage_GyroSteeringAxisDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GyroSteeringAxisDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Image Sharpening.
        /// </summary>
        public static string ProfilesPage_ImageSharpening {
            get {
                return ResourceManager.GetString("ProfilesPage_ImageSharpening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enhances visual detail.
        /// </summary>
        public static string ProfilesPage_ImageSharpeningDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ImageSharpeningDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invert horizontal axis.
        /// </summary>
        public static string ProfilesPage_InvertHorizontalAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_InvertHorizontalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invert vertical axis.
        /// </summary>
        public static string ProfilesPage_InvertVerticalAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_InvertVerticalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Integer scaling.
        /// </summary>
        public static string ProfilesPage_IS {
            get {
                return ResourceManager.GetString("ProfilesPage_IS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scales up resolution by multiplying each pixel by an integer.
        /// </summary>
        public static string ProfilesPage_ISDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ISDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick deadzone % left.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneLeft {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the left joystick.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneLeftDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick deadzone % right.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneRight {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the right joystick.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneRightDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneRightDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion control settings.
        /// </summary>
        public static string ProfilesPage_MotionControlSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_MotionControlSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the motion control settings.
        /// </summary>
        public static string ProfilesPage_MotionControlSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_MotionControlSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OK.
        /// </summary>
        public static string ProfilesPage_OK {
            get {
                return ResourceManager.GetString("ProfilesPage_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power limit target.
        /// </summary>
        public static string ProfilesPage_PowerLimitTarget {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerLimitTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power preset.
        /// </summary>
        public static string ProfilesPage_PowerPreset {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the selected power preset.
        /// </summary>
        public static string ProfilesPage_PowerPresetDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerPresetDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power settings.
        /// </summary>
        public static string ProfilesPage_PowerSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile details.
        /// </summary>
        public static string ProfilesPage_ProfileDetails {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile name.
        /// </summary>
        public static string ProfilesPage_ProfileName {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile path.
        /// </summary>
        public static string ProfilesPage_ProfilePath {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profiles.
        /// </summary>
        public static string ProfilesPage_Profiles {
            get {
                return ResourceManager.GetString("ProfilesPage_Profiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile selection.
        /// </summary>
        public static string ProfilesPage_ProfileSelection {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the profile you would like to edit.
        /// </summary>
        public static string ProfilesPage_ProfileSelectionDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSelectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile settings.
        /// </summary>
        public static string ProfilesPage_ProfileSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile updated.
        /// </summary>
        public static string ProfilesPage_ProfileUpdated1 {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileUpdated1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à was updated..
        /// </summary>
        public static string ProfilesPage_ProfileUpdated2 {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileUpdated2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resolution scale.
        /// </summary>
        public static string ProfilesPage_ResolutionScale {
            get {
                return ResourceManager.GetString("ProfilesPage_ResolutionScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resolution scale to which integer scaling will apply.
        /// </summary>
        public static string ProfilesPage_ResolutionScaleDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ResolutionScaleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scaling type.
        /// </summary>
        public static string ProfilesPage_ResolutionScaleType {
            get {
                return ResourceManager.GetString("ProfilesPage_ResolutionScaleType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select scaling type to adapt the scaling aspect ratio.
        /// </summary>
        public static string ProfilesPage_ResolutionScaleTypeDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ResolutionScaleTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Integer Scaling.
        /// </summary>
        public static string ProfilesPage_ResolutionScaleTypeInteger {
            get {
                return ResourceManager.GetString("ProfilesPage_ResolutionScaleTypeInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Nearest Neighbor.
        /// </summary>
        public static string ProfilesPage_ResolutionScaleTypeNearest {
            get {
                return ResourceManager.GetString("ProfilesPage_ResolutionScaleTypeNearest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Roll.
        /// </summary>
        public static string ProfilesPage_Roll {
            get {
                return ResourceManager.GetString("ProfilesPage_Roll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Radeon Super Resolution.
        /// </summary>
        public static string ProfilesPage_RSR {
            get {
                return ResourceManager.GetString("ProfilesPage_RSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à In-driver-based upscaling feature for faster framerates.
        /// </summary>
        public static string ProfilesPage_RSRDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_RSRDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scaling mode.
        /// </summary>
        public static string ProfilesPage_ScalingMode {
            get {
                return ResourceManager.GetString("ProfilesPage_ScalingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Center.
        /// </summary>
        public static string ProfilesPage_ScalingMode_Center {
            get {
                return ResourceManager.GetString("ProfilesPage_ScalingMode_Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Full panel.
        /// </summary>
        public static string ProfilesPage_ScalingMode_FullPanel {
            get {
                return ResourceManager.GetString("ProfilesPage_ScalingMode_FullPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preserve aspect ratio.
        /// </summary>
        public static string ProfilesPage_ScalingMode_PreserveAspectRatio {
            get {
                return ResourceManager.GetString("ProfilesPage_ScalingMode_PreserveAspectRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose the method used to stretch and position images to fir the display.
        /// </summary>
        public static string ProfilesPage_ScalingModeDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ScalingModeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X.
        /// </summary>
        public static string ProfilesPage_SensitivityX {
            get {
                return ResourceManager.GetString("ProfilesPage_SensitivityX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y.
        /// </summary>
        public static string ProfilesPage_SensitivityY {
            get {
                return ResourceManager.GetString("ProfilesPage_SensitivityY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sharpen effect.
        /// </summary>
        public static string ProfilesPage_Sharpen {
            get {
                return ResourceManager.GetString("ProfilesPage_Sharpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Style of input.
        /// </summary>
        public static string ProfilesPage_StyleofInput {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The physical inputs of the controller can be programmed to act like different types of devices.
        /// </summary>
        public static string ProfilesPage_StyleofInputTooltip {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Output device.
        /// </summary>
        public static string ProfilesPage_StyleofOutput {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the device that will receive the motion commands.
        /// </summary>
        public static string ProfilesPage_StyleofOutputTooltip {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sub Profiles.
        /// </summary>
        public static string ProfilesPage_SubProfiles {
            get {
                return ResourceManager.GetString("ProfilesPage_SubProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add different profiles to the same game.
        /// </summary>
        public static string ProfilesPage_SubProfilesDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_SubProfilesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sustained power limit.
        /// </summary>
        public static string ProfilesPage_SustainedPower {
            get {
                return ResourceManager.GetString("ProfilesPage_SustainedPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change sustained thermal power limit.
        /// </summary>
        public static string ProfilesPage_SustainedPowerDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_SustainedPowerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thermal Power (TDP) limit.
        /// </summary>
        public static string ProfilesPage_TDPOverride {
            get {
                return ResourceManager.GetString("ProfilesPage_TDPOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Limits processor power for less total power.
        /// </summary>
        public static string ProfilesPage_TDPOverrideDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_TDPOverrideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Improve the stick circularity.
        /// </summary>
        public static string ProfilesPage_ThumbImproveCircularityDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ThumbImproveCircularityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Circularity stick left.
        /// </summary>
        public static string ProfilesPage_ThumbImproveCircularityLeft {
            get {
                return ResourceManager.GetString("ProfilesPage_ThumbImproveCircularityLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Circularity stick right.
        /// </summary>
        public static string ProfilesPage_ThumbImproveCircularityRight {
            get {
                return ResourceManager.GetString("ProfilesPage_ThumbImproveCircularityRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left trigger deadzone %.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneLeft {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the left trigger.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneLeftDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right trigger deadzone %.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneRight {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the right trigger.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneRightDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneRightDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion anti-deadzone.
        /// </summary>
        public static string ProfilesPage_UMCAntiDeadzone {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCAntiDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Compensate for in game deadzone, improve registration of small movements.
        /// </summary>
        public static string ProfilesPage_UMCAntiDeadzoneDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCAntiDeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable universal motion controller.
        /// </summary>
        public static string ProfilesPage_UMCEnable {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled, turn on with button(s).
        /// </summary>
        public static string ProfilesPage_UMCMotionOff {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enabled, turn off with button(s).
        /// </summary>
        public static string ProfilesPage_UMCMotionOn {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion activation.
        /// </summary>
        public static string ProfilesPage_UMCMotionOnOff {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOnOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion input disabled: hold selected button(s) to enable motion.
        ///Motion input enabled: hold selected button(s) to disable motion.
        ///Motion input toggle: press selected button(s) to switch motion state..
        /// </summary>
        public static string ProfilesPage_UMCMotionOnOffDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOnOffDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle between enabled or disabled with button(s).
        /// </summary>
        public static string ProfilesPage_UMCMotionToggle {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the device that will receive the motion commands.
        /// </summary>
        public static string ProfilesPage_UMCSelectionRightLeftDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSelectionRightLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Universal motion control settings.
        /// </summary>
        public static string ProfilesPage_UMCSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Translate device motions into controller inputs.
        /// </summary>
        public static string ProfilesPage_UMCSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update profile.
        /// </summary>
        public static string ProfilesPage_UpdateProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_UpdateProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow the application to access device physical controller.
        /// </summary>
        public static string ProfilesPage_Whitelist {
            get {
                return ResourceManager.GetString("ProfilesPage_Whitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extended compatibility (XInputPlus).
        /// </summary>
        public static string ProfilesPage_Wrapper {
            get {
                return ResourceManager.GetString("ProfilesPage_Wrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        public static string ProfilesPage_Wrapper_Disabled {
            get {
                return ResourceManager.GetString("ProfilesPage_Wrapper_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Injection (recommended).
        /// </summary>
        public static string ProfilesPage_Wrapper_Injection {
            get {
                return ResourceManager.GetString("ProfilesPage_Wrapper_Injection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redirection.
        /// </summary>
        public static string ProfilesPage_Wrapper_Redirection {
            get {
                return ResourceManager.GetString("ProfilesPage_Wrapper_Redirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yaw.
        /// </summary>
        public static string ProfilesPage_Yaw {
            get {
                return ResourceManager.GetString("ProfilesPage_Yaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes.
        /// </summary>
        public static string ProfilesPage_Yes {
            get {
                return ResourceManager.GetString("ProfilesPage_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnect.
        /// </summary>
        public static string Properties_Resources_ControllerPage_Disconnect {
            get {
                return ResourceManager.GetString("Properties.Resources.ControllerPage_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings, display profile.
        /// </summary>
        public static string QuickDevicePage_Desc {
            get {
                return ResourceManager.GetString("QuickDevicePage_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device.
        /// </summary>
        public static string QuickDevicePage_Title {
            get {
                return ResourceManager.GetString("QuickDevicePage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Home.
        /// </summary>
        public static string QuickHomePage_Title {
            get {
                return ResourceManager.GetString("QuickHomePage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage on-screen overlay.
        /// </summary>
        public static string QuickOverlayPage_Desc {
            get {
                return ResourceManager.GetString("QuickOverlayPage_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string QuickOverlayPage_Title {
            get {
                return ResourceManager.GetString("QuickOverlayPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FPS.
        /// </summary>
        public static string QuickPerformancePage_AutoTDPUnitFPS {
            get {
                return ResourceManager.GetString("QuickPerformancePage_AutoTDPUnitFPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CPU boost mode.
        /// </summary>
        public static string QuickPerformancePage_CPUBoostMode {
            get {
                return ResourceManager.GetString("QuickPerformancePage_CPUBoostMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set current CPU boost mode.
        /// </summary>
        public static string QuickPerformancePage_CPUBoostModeDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_CPUBoostModeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual CPU Clock Control.
        /// </summary>
        public static string QuickPerformancePage_CPUControl {
            get {
                return ResourceManager.GetString("QuickPerformancePage_CPUControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sets the CPU to a fixed clock.
        /// </summary>
        public static string QuickPerformancePage_CPUControlDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_CPUControlDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  Mhz.
        /// </summary>
        public static string QuickPerformancePage_CPUUnit {
            get {
                return ResourceManager.GetString("QuickPerformancePage_CPUUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fan override.
        /// </summary>
        public static string QuickPerformancePage_FanOverride {
            get {
                return ResourceManager.GetString("QuickPerformancePage_FanOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set the fan duty cycle to user-defined value.
        /// </summary>
        public static string QuickPerformancePage_FanOverrideDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_FanOverrideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à %.
        /// </summary>
        public static string QuickPerformancePage_FanOverridePercentage {
            get {
                return ResourceManager.GetString("QuickPerformancePage_FanOverridePercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual GPU Clock Control.
        /// </summary>
        public static string QuickPerformancePage_GPUControl {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sets the GPU to a fixed clock.
        /// </summary>
        public static string QuickPerformancePage_GPUControlDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUControlDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  MHz.
        /// </summary>
        public static string QuickPerformancePage_GPUUnit {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power mode.
        /// </summary>
        public static string QuickPerformancePage_PowerMode {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Balanced.
        /// </summary>
        public static string QuickPerformancePage_PowerModeBalanced {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeBalanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Optimize your device based on power use and performance.
        /// </summary>
        public static string QuickPerformancePage_PowerModeDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Efficiency.
        /// </summary>
        public static string QuickPerformancePage_PowerModeEfficiency {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeEfficiency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Performance.
        /// </summary>
        public static string QuickPerformancePage_PowerModePerformance {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModePerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boost.
        /// </summary>
        public static string QuickPerformancePage_TDPBoost {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPBoost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thermal Power (TDP) Limit.
        /// </summary>
        public static string QuickPerformancePage_TDPLimit {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Limits processor power for less total power.
        /// </summary>
        public static string QuickPerformancePage_TDPLimitDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPLimitDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thermal Power Limit is overwritten by a profile.
        /// </summary>
        public static string QuickPerformancePage_TDPOverWrittenWarning {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPOverWrittenWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sustained.
        /// </summary>
        public static string QuickPerformancePage_TDPSustained {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPSustained", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  W.
        /// </summary>
        public static string QuickPerformancePage_TDPUnitWatt {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPUnitWatt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Performance.
        /// </summary>
        public static string QuickPerformancePage_Title {
            get {
                return ResourceManager.GetString("QuickPerformancePage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create profile.
        /// </summary>
        public static string QuickProfilesPage_Create {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Current profile:.
        /// </summary>
        public static string QuickProfilesPage_CurrentProfile {
            get {
                return ResourceManager.GetString("QuickProfilesPage_CurrentProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default.
        /// </summary>
        public static string QuickProfilesPage_CurrentProfileDefault {
            get {
                return ResourceManager.GetString("QuickProfilesPage_CurrentProfileDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Performance, motion control, graphics.
        /// </summary>
        public static string QuickProfilesPage_Desc {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power limit target.
        /// </summary>
        public static string QuickProfilesPage_PowerLimitTarget {
            get {
                return ResourceManager.GetString("QuickProfilesPage_PowerLimitTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select a sub profile to apply.
        /// </summary>
        public static string QuickProfilesPage_SubProfilesDesc {
            get {
                return ResourceManager.GetString("QuickProfilesPage_SubProfilesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profiles.
        /// </summary>
        public static string QuickProfilesPage_Title {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting for foreground process....
        /// </summary>
        public static string QuickProfilesPage_Waiting {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Waiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preferred actions.
        /// </summary>
        public static string QuickSettingsPage_Desc {
            get {
                return ResourceManager.GetString("QuickSettingsPage_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refresh rate.
        /// </summary>
        public static string QuickSettingsPage_DisplayFrequency {
            get {
                return ResourceManager.GetString("QuickSettingsPage_DisplayFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust main refresh rate.
        /// </summary>
        public static string QuickSettingsPage_DisplayFrequencyDesc {
            get {
                return ResourceManager.GetString("QuickSettingsPage_DisplayFrequencyDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display resolution.
        /// </summary>
        public static string QuickSettingsPage_DisplayResolution {
            get {
                return ResourceManager.GetString("QuickSettingsPage_DisplayResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust main display resolution.
        /// </summary>
        public static string QuickSettingsPage_DisplayResolutionDesc {
            get {
                return ResourceManager.GetString("QuickSettingsPage_DisplayResolutionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resolution is currently overridden by profile.
        /// </summary>
        public static string QuickSettingsPage_ResolutionOverrideWarning {
            get {
                return ResourceManager.GetString("QuickSettingsPage_ResolutionOverrideWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 1/1 only supports Exclusive Fullscreen..
        /// </summary>
        public static string QuickSettingsPage_ResScaleExclusiveFullscreen {
            get {
                return ResourceManager.GetString("QuickSettingsPage_ResScaleExclusiveFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Actions.
        /// </summary>
        public static string QuickSettingsPage_Title {
            get {
                return ResourceManager.GetString("QuickSettingsPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspend and resume apps.
        /// </summary>
        public static string QuickSuspenderPage_Desc {
            get {
                return ResourceManager.GetString("QuickSuspenderPage_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspender.
        /// </summary>
        public static string QuickSuspenderPage_Title {
            get {
                return ResourceManager.GetString("QuickSuspenderPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides gyroscope and accelerometer support to Windows handheld gaming computers through a virtual controller. If the service is enabled, embedded controller will be cloaked to applications outside the whitelist. If the service is disabled, embedded controller will be uncloaked and the virtual controller disabled..
        /// </summary>
        public static string ServiceDescription {
            get {
                return ResourceManager.GetString("ServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller Service.
        /// </summary>
        public static string ServiceName {
            get {
                return ResourceManager.GetString("ServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Additional settings.
        /// </summary>
        public static string SettingsMode0_AdditionalSettings {
            get {
                return ResourceManager.GetString("SettingsMode0_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aiming down sights motion multiplier.
        /// </summary>
        public static string SettingsMode0_AimingDownSights {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Activation button.
        /// </summary>
        public static string SettingsMode0_AimingDownSightsActivation {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSightsActivation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An additional motion sensitivity multiplier when aiming down sights or scope through the use of the configured activation button.
        /// </summary>
        public static string SettingsMode0_AimingDownSightsDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSightsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multiplier value.
        /// </summary>
        public static string SettingsMode0_AimingDownSightsMultiplier {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSightsMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Camera options.
        /// </summary>
        public static string SettingsMode0_CameraOptions {
            get {
                return ResourceManager.GetString("SettingsMode0_CameraOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom response curve.
        /// </summary>
        public static string SettingsMode0_CustomResponseCurve {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponseCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Output sent to game.
        /// </summary>
        public static string SettingsMode0_CustomResponseCurveGameOutput {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponseCurveGameOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Movement intensity.
        /// </summary>
        public static string SettingsMode0_CustomResponseIntensity {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponseIntensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Agressive.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetAgressive {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetAgressive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetDefault {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preset options.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetOptions {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Precise.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetPrecise {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetPrecise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Flick duration.
        /// </summary>
        public static string SettingsMode0_FlickDuration {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the flick duration, calibrate to 180 degree turn, in milliseconds.
        /// </summary>
        public static string SettingsMode0_FlickDurationDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickDurationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Flick stick (experimental).
        /// </summary>
        public static string SettingsMode0_FlickStick {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Point camera in direction of (right) joystick flick, rotate camera purely in horizontal plane by rotating.
        /// </summary>
        public static string SettingsMode0_FlickStickDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickStickDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable flick stick.
        /// </summary>
        public static string SettingsMode0_FlickStickEnable {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickStickEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensitivity.
        /// </summary>
        public static string SettingsMode0_Sensitivity {
            get {
                return ResourceManager.GetString("SettingsMode0_Sensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the motion sensitivity of the horizontal and vertical axis.
        /// </summary>
        public static string SettingsMode0_SensitivityDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensitivity X.
        /// </summary>
        public static string SettingsMode0_SensitivityX {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the motion sensitivity of the horizontal axis.
        /// </summary>
        public static string SettingsMode0_SensitivityXDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityXDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensitivity Y.
        /// </summary>
        public static string SettingsMode0_SensitivityY {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the motion sensitivity of the vertical axis.
        /// </summary>
        public static string SettingsMode0_SensitivityYDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityYDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stick sensitivtity.
        /// </summary>
        public static string SettingsMode0_StickSensitivtity {
            get {
                return ResourceManager.GetString("SettingsMode0_StickSensitivtity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the rotation rate.
        /// </summary>
        public static string SettingsMode0_StickSensitivtityDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_StickSensitivtityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Additional settings.
        /// </summary>
        public static string SettingsMode1_AdditionalSettings {
            get {
                return ResourceManager.GetString("SettingsMode1_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deadzone.
        /// </summary>
        public static string SettingsMode1_Deadzone {
            get {
                return ResourceManager.GetString("SettingsMode1_Deadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the steering deadzone. Improves steering straight.
        /// </summary>
        public static string SettingsMode1_DeadzoneDesc {
            get {
                return ResourceManager.GetString("SettingsMode1_DeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick game Input.
        /// </summary>
        public static string SettingsMode1_JoystickGameInput {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickGameInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick steering.
        /// </summary>
        public static string SettingsMode1_JoystickSteering {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickSteering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick steering options.
        /// </summary>
        public static string SettingsMode1_JoystickSteeringOptions {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickSteeringOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick steering preview.
        /// </summary>
        public static string SettingsMode1_JoystickSteeringPreview {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickSteeringPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max steering angle.
        /// </summary>
        public static string SettingsMode1_MaxSteeringAngle {
            get {
                return ResourceManager.GetString("SettingsMode1_MaxSteeringAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the maximum steering angle value.
        /// </summary>
        public static string SettingsMode1_MaxSteeringAngleDesc {
            get {
                return ResourceManager.GetString("SettingsMode1_MaxSteeringAngleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Steering linearity.
        /// </summary>
        public static string SettingsMode1_SteeringLinearity {
            get {
                return ResourceManager.GetString("SettingsMode1_SteeringLinearity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapping between input and steering. Lower values provide more accuracy near full lock but less accuracy near the center. Higher values provide more accuracy near the center but less accuracy near full lock. 1.0 is a linear mapping.
        /// </summary>
        public static string SettingsMode1_SteeringLinearityDesc {
            get {
                return ResourceManager.GetString("SettingsMode1_SteeringLinearityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Language.
        /// </summary>
        public static string SettingsPage_AppLanguage {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application language.
        /// </summary>
        public static string SettingsPage_AppLanguageDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart required.
        /// </summary>
        public static string SettingsPage_AppLanguageWarning {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à In order for the changes to take effect, please restart the application.
        /// </summary>
        public static string SettingsPage_AppLanguageWarningDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageWarningDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application theme.
        /// </summary>
        public static string SettingsPage_AppTheme {
            get {
                return ResourceManager.GetString("SettingsPage_AppTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application theme, light or dark mode.
        /// </summary>
        public static string SettingsPage_AppThemeDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppThemeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auto-start application.
        /// </summary>
        public static string SettingsPage_AutoStartApp {
            get {
                return ResourceManager.GetString("SettingsPage_AutoStartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application will start automatically when I sign in to Windows.
        /// </summary>
        public static string SettingsPage_AutoStartAppDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AutoStartAppDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application backdrop.
        /// </summary>
        public static string SettingsPage_Backdrop {
            get {
                return ResourceManager.GetString("SettingsPage_Backdrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Acrylic.
        /// </summary>
        public static string SettingsPage_BackdropAcrylic {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropAcrylic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application backdrop, none, mica, tabbed, acrylic.
        /// </summary>
        public static string SettingsPage_BackdropDesc {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mica.
        /// </summary>
        public static string SettingsPage_BackdropMica {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropMica", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        public static string SettingsPage_BackdropNone {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tabbed.
        /// </summary>
        public static string SettingsPage_BackdropTabbed {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropTabbed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check for updates.
        /// </summary>
        public static string SettingsPage_CheckForUpdates {
            get {
                return ResourceManager.GetString("SettingsPage_CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close minimizes.
        /// </summary>
        public static string SettingsPage_CloseMinimizes {
            get {
                return ResourceManager.GetString("SettingsPage_CloseMinimizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application will be minimized instead of closed.
        /// </summary>
        public static string SettingsPage_CloseMinimizesDesc {
            get {
                return ResourceManager.GetString("SettingsPage_CloseMinimizesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes.
        /// </summary>
        public static string SettingsPage_ControllerManagementDependencyPrimary {
            get {
                return ResourceManager.GetString("SettingsPage_ControllerManagementDependencyPrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No.
        /// </summary>
        public static string SettingsPage_ControllerManagementDependencySecondary {
            get {
                return ResourceManager.GetString("SettingsPage_ControllerManagementDependencySecondary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabling this setting will also disable &quot;Improve virtual controller detection&quot;. Do you want to continue?.
        /// </summary>
        public static string SettingsPage_ControllerManagementDependencyText {
            get {
                return ResourceManager.GetString("SettingsPage_ControllerManagementDependencyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Warning.
        /// </summary>
        public static string SettingsPage_ControllerManagementDependencyTitle {
            get {
                return ResourceManager.GetString("SettingsPage_ControllerManagementDependencyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download.
        /// </summary>
        public static string SettingsPage_Download {
            get {
                return ResourceManager.GetString("SettingsPage_Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Downloading - .
        /// </summary>
        public static string SettingsPage_DownloadingPercentage {
            get {
                return ResourceManager.GetString("SettingsPage_DownloadingPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Smart efficiency.
        /// </summary>
        public static string SettingsPage_EcoQoS {
            get {
                return ResourceManager.GetString("SettingsPage_EcoQoS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Smart efficiency mode reduces the priority of background processes and improves energy efficiency.
        /// </summary>
        public static string SettingsPage_EcoQoSDesc {
            get {
                return ResourceManager.GetString("SettingsPage_EcoQoSDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable desktop profile on start.
        /// </summary>
        public static string SettingsPage_EnableDesktopProfileOnStart {
            get {
                return ResourceManager.GetString("SettingsPage_EnableDesktopProfileOnStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The desktop profile will be automatically enabled on application start.
        /// </summary>
        public static string SettingsPage_EnableDesktopProfileOnStartDesc {
            get {
                return ResourceManager.GetString("SettingsPage_EnableDesktopProfileOnStartDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à General options.
        /// </summary>
        public static string SettingsPage_GeneralOptions {
            get {
                return ResourceManager.GetString("SettingsPage_GeneralOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hide when loses focus.
        /// </summary>
        public static string SettingsPage_HideWhenLoseFocus {
            get {
                return ResourceManager.GetString("SettingsPage_HideWhenLoseFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatically hide quick tools when the user clicks outside of window.
        /// </summary>
        public static string SettingsPage_HideWhenLoseFocusDesc {
            get {
                return ResourceManager.GetString("SettingsPage_HideWhenLoseFocusDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install now.
        /// </summary>
        public static string SettingsPage_InstallNow {
            get {
                return ResourceManager.GetString("SettingsPage_InstallNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Last checked: .
        /// </summary>
        public static string SettingsPage_LastChecked {
            get {
                return ResourceManager.GetString("SettingsPage_LastChecked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Native display orientation.
        /// </summary>
        public static string SettingsPage_NativeDisplayOrientation {
            get {
                return ResourceManager.GetString("SettingsPage_NativeDisplayOrientation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Some features depend on knowing the native display orientation to work properly. If this was not detected properly, set your display&apos;s orientation to the orientation that matches your controller, then click Detect.
        /// </summary>
        public static string SettingsPage_NativeDisplayOrientationDesc {
            get {
                return ResourceManager.GetString("SettingsPage_NativeDisplayOrientationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Detect.
        /// </summary>
        public static string SettingsPage_NativeDisplayOrientationDetect {
            get {
                return ResourceManager.GetString("SettingsPage_NativeDisplayOrientationDetect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not set.
        /// </summary>
        public static string SettingsPage_NativeDisplayOrientationNotSet {
            get {
                return ResourceManager.GetString("SettingsPage_NativeDisplayOrientationNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notification options.
        /// </summary>
        public static string SettingsPage_NotificationOptions {
            get {
                return ResourceManager.GetString("SettingsPage_NotificationOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open application in background.
        /// </summary>
        public static string SettingsPage_OpenAppBackground {
            get {
                return ResourceManager.GetString("SettingsPage_OpenAppBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application will initially start minimized and appear on the taskbar.
        /// </summary>
        public static string SettingsPage_OpenAppBackgroundDesc {
            get {
                return ResourceManager.GetString("SettingsPage_OpenAppBackgroundDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quicktools backdrop, none, mica, tabbed, acrylic.
        /// </summary>
        public static string SettingsPage_QuickToolsBackdrop {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsBackdrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Quicktools options.
        /// </summary>
        public static string SettingsPage_QuickToolsOptions {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Window location.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocation {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bottom left.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocationBottomLeft {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocationBottomLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bottom right.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocationBottomRight {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocationBottomRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Define quicktools window location.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocationDesc {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocationLeft {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocationLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocationRight {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocationRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Top left.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocationTopLeft {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocationTopLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Top right.
        /// </summary>
        public static string SettingsPage_QuickToolsWindowLocationTopRight {
            get {
                return ResourceManager.GetString("SettingsPage_QuickToolsWindowLocationTopRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RivaTuner Statistics Server.
        /// </summary>
        public static string SettingsPage_RivaTunerStatisticsServer {
            get {
                return ResourceManager.GetString("SettingsPage_RivaTunerStatisticsServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatically turn RTSS off when companion is closed.
        /// </summary>
        public static string SettingsPage_RivaTunerStatisticsServerDesc {
            get {
                return ResourceManager.GetString("SettingsPage_RivaTunerStatisticsServerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor calibration.
        /// </summary>
        public static string SettingsPage_SensorCalibration {
            get {
                return ResourceManager.GetString("SettingsPage_SensorCalibration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Will calibrate your device IMU sensor.
        /// </summary>
        public static string SettingsPage_SensorCalibrationDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorCalibrationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External.
        /// </summary>
        public static string SettingsPage_SensorExternal {
            get {
                return ResourceManager.GetString("SettingsPage_SensorExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Internal.
        /// </summary>
        public static string SettingsPage_SensorInternal {
            get {
                return ResourceManager.GetString("SettingsPage_SensorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        public static string SettingsPage_SensorNone {
            get {
                return ResourceManager.GetString("SettingsPage_SensorNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor options.
        /// </summary>
        public static string SettingsPage_SensorOptions {
            get {
                return ResourceManager.GetString("SettingsPage_SensorOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External sensor placement direction.
        /// </summary>
        public static string SettingsPage_SensorPlacementDirection {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select on which side of the device the senor has been mounted.
        /// </summary>
        public static string SettingsPage_SensorPlacementDirectionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementDirectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External sensor upside down.
        /// </summary>
        public static string SettingsPage_SensorPlacementUpsideDown {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementUpsideDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor has been mounted upside down, possible with USB-C convertor.
        /// </summary>
        public static string SettingsPage_SensorPlacementUpsideDownDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementUpsideDownDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor selection.
        /// </summary>
        public static string SettingsPage_SensorSelection {
            get {
                return ResourceManager.GetString("SettingsPage_SensorSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the desired sensor used for motion input.
        /// </summary>
        public static string SettingsPage_SensorSelectionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorSelectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings.
        /// </summary>
        public static string SettingsPage_Settings {
            get {
                return ResourceManager.GetString("SettingsPage_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Startup type.
        /// </summary>
        public static string SettingsPage_StartupType {
            get {
                return ResourceManager.GetString("SettingsPage_StartupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Used by the service manager to define the service startup type.
        /// </summary>
        public static string SettingsPage_StartupTypeDesc {
            get {
                return ResourceManager.GetString("SettingsPage_StartupTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximum Power.
        /// </summary>
        public static string SettingsPage_TDPMax {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The maximum power in watts supplied to the processor.
        /// </summary>
        public static string SettingsPage_TDPMaxDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMaxDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Minimum Power.
        /// </summary>
        public static string SettingsPage_TDPMin {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The minimum power in watts supplied to the processor.
        /// </summary>
        public static string SettingsPage_TDPMinDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMinDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configurable power (cTDP) override.
        /// </summary>
        public static string SettingsPage_TDPRangeOverride {
            get {
                return ResourceManager.GetString("SettingsPage_TDPRangeOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allows to modify the minimum and maximum power values (TDP) beyond the CPU specifications.
        /// </summary>
        public static string SettingsPage_TDPRangeOverrideDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPRangeOverrideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dark.
        /// </summary>
        public static string SettingsPage_ThemeDark {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use system setting.
        /// </summary>
        public static string SettingsPage_ThemeDefault {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Light.
        /// </summary>
        public static string SettingsPage_ThemeLight {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Third-party applications.
        /// </summary>
        public static string SettingsPage_ThirdPartyApps {
            get {
                return ResourceManager.GetString("SettingsPage_ThirdPartyApps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toast notification.
        /// </summary>
        public static string SettingsPage_ToastNotification {
            get {
                return ResourceManager.GetString("SettingsPage_ToastNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Get notifications from the application in the Windows action center.
        /// </summary>
        public static string SettingsPage_ToastNotificationDesc {
            get {
                return ResourceManager.GetString("SettingsPage_ToastNotificationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable UI sounds.
        /// </summary>
        public static string SettingsPage_UISounds {
            get {
                return ResourceManager.GetString("SettingsPage_UISounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable or disable UI sounds on navigation.
        /// </summary>
        public static string SettingsPage_UISoundsDesc {
            get {
                return ResourceManager.GetString("SettingsPage_UISoundsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updates available.
        /// </summary>
        public static string SettingsPage_UpdateAvailable {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking for updates....
        /// </summary>
        public static string SettingsPage_UpdateCheck {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We couldn&apos;t download the update file..
        /// </summary>
        public static string SettingsPage_UpdateFailedDownload {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We couldn&apos;t reach github..
        /// </summary>
        public static string SettingsPage_UpdateFailedGithub {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedGithub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We couldn&apos;t locate the update file..
        /// </summary>
        public static string SettingsPage_UpdateFailedInstall {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oups. There was an issue..
        /// </summary>
        public static string SettingsPage_UpdateWarning {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You&apos;re up to date.
        /// </summary>
        public static string SettingsPage_UpToDate {
            get {
                return ResourceManager.GetString("SettingsPage_UpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller is now cloaked and inputs forwarded to virtual controller.
        /// </summary>
        public static string ToastNewControllerEx {
            get {
                return ResourceManager.GetString("ToastNewControllerEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LEFT TRACKPAD.
        /// </summary>
        public static string TrackPadsPage_Trackpad_Left {
            get {
                return ResourceManager.GetString("TrackPadsPage_Trackpad_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LEFT TRACKPAD BUTTONS.
        /// </summary>
        public static string TrackPadsPage_Trackpad_Left_Buttons {
            get {
                return ResourceManager.GetString("TrackPadsPage_Trackpad_Left_Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RIGHT TRACKPAD.
        /// </summary>
        public static string TrackPadsPage_Trackpad_Right {
            get {
                return ResourceManager.GetString("TrackPadsPage_Trackpad_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RIGHT TRACKPAD BUTTONS.
        /// </summary>
        public static string TrackPadsPage_Trackpad_Right_Buttons {
            get {
                return ResourceManager.GetString("TrackPadsPage_Trackpad_Right_Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LEFT TRIGGER.
        /// </summary>
        public static string TriggersPage_Trigger_Left {
            get {
                return ResourceManager.GetString("TriggersPage_Trigger_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à LEFT TRIGGER BUTTONS.
        /// </summary>
        public static string TriggersPage_Trigger_Left_Button {
            get {
                return ResourceManager.GetString("TriggersPage_Trigger_Left_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RIGHT TRIGGER.
        /// </summary>
        public static string TriggersPage_Trigger_Right {
            get {
                return ResourceManager.GetString("TriggersPage_Trigger_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RIGHT TRIGGER BUTTONS.
        /// </summary>
        public static string TriggersPage_Trigger_Right_Button {
            get {
                return ResourceManager.GetString("TriggersPage_Trigger_Right_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User.
        /// </summary>
        public static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Run this tool as Administrator to unlock these settings.
        /// </summary>
        public static string WarningElevated {
            get {
                return ResourceManager.GetString("WarningElevated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] xinput1_x64 {
            get {
                object obj = ResourceManager.GetObject("xinput1_x64", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] xinput1_x86 {
            get {
                object obj = ResourceManager.GetObject("xinput1_x86", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please restart your controller by holding the Guide button to finalize pairing..
        /// </summary>
        public static string XInputController_Warning_BTH {
            get {
                return ResourceManager.GetString("XInputController_Warning_BTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please wait a moment while we power cycle your controller..
        /// </summary>
        public static string XInputController_Warning_USB {
            get {
                return ResourceManager.GetString("XInputController_Warning_USB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [General]
        ///iniFileVersion=4150
        ///[KeyAssign]
        ///LS=LS
        ///RS=RS
        ///LT=LT
        ///RT=RT
        ///DPAD_UP=DPAD_UP
        ///DPAD_DOWN=DPAD_DOWN
        ///DPAD_LEFT=DPAD_LEFT
        ///DPAD_RIGHT=DPAD_RIGHT
        ///A=A
        ///B=B
        ///X=X
        ///Y=Y
        ///LB=LB
        ///RB=RB
        ///LSB=LSB
        ///RSB=RSB
        ///BACK=BACK
        ///START=START
        ///GUIDE=GUIDE
        ///ThresholdA2D=40
        ///DPAD4Direction=False
        ///[LeftStick]
        ///DeadZone=0
        ///Saturation=32767
        ///Linearity=1
        ///Response=32767
        ///RectCorrection=0
        ///Scale=1
        ///CenterOffsetX=0
        ///CenterOffsetY=0
        ///InvertX=False
        ///InvertY=False
        ///DisableX=False
        ///DisableY=False
        ///[RightStick]
        ///DeadZone=0
        ///Saturati [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string XInputPlus {
            get {
                return ResourceManager.GetString("XInputPlus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] XInputPlusInjector {
            get {
                object obj = ResourceManager.GetObject("XInputPlusInjector", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] XInputPlusInjector64 {
            get {
                object obj = ResourceManager.GetObject("XInputPlusInjector64", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
